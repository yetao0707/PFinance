2015-08-02 00:01:18,793 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 00:01:19,085 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@608760: startup date [Sun Aug 02 00:01:19 CST 2015]; root of context hierarchy
2015-08-02 00:01:19,217 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 00:01:19,268 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14ce5eb: defining beans [propertiesConfigBean,dataSource,txManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:01:19,287 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 00:01:19,366 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 00:01:19,800 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1sxbkkbh4s9cj|165cebb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1sxbkkbh4s9cj|165cebb, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 00:01:20,100 WARN org.springframework.test.context.transaction.TransactionalTestExecutionListener.getTransactionManager() - Caught exception while retrieving transaction manager with bean name [transactionManager] for test context [[TestContext@170c7a3 testClass = BaseTest, testInstance = com.BaseTest@142d884, testMethod = findAll@BaseTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@194d431 testClass = BaseTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:277)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1102)
	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.getTransactionManager(TransactionalTestExecutionListener.java:311)
	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:161)
	at org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:358)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:73)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
2015-08-02 00:01:20,102 WARN org.springframework.test.context.TestContextManager.beforeTestMethod() - Caught exception while allowing TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener@11cbec9] to process 'before' execution of test method [public void com.BaseTest.findAll()] for test instance [com.BaseTest@142d884]
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:277)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1102)
	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.getTransactionManager(TransactionalTestExecutionListener.java:311)
	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:161)
	at org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:358)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:73)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
2015-08-02 00:01:20,213 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@608760: startup date [Sun Aug 02 00:01:19 CST 2015]; root of context hierarchy
2015-08-02 00:01:20,214 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14ce5eb: defining beans [propertiesConfigBean,dataSource,txManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:02:12,461 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [com/spring-conf/ApplicationContext.xml]
2015-08-02 00:02:12,463 ERROR org.springframework.test.context.TestContextManager.prepareTestInstance() - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@878c4c] to prepare test instance [com.BaseTest@10c0f66]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:157)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:211)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:288)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:284)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from class path resource [com/spring-conf/ApplicationContext.xml]; nested exception is java.io.FileNotFoundException: class path resource [com/spring-conf/ApplicationContext.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:341)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:243)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadBeanDefinitions(AbstractGenericContextLoader.java:217)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:102)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:57)
	at org.springframework.test.context.support.DelegatingSmartContextLoader.loadContext(DelegatingSmartContextLoader.java:228)
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:124)
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148)
	... 24 more
Caused by: java.io.FileNotFoundException: class path resource [com/spring-conf/ApplicationContext.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:328)
	... 35 more
2015-08-02 00:03:43,616 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 00:03:44,031 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 00:03:44 CST 2015]; root of context hierarchy
2015-08-02 00:03:44,161 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 00:03:44,209 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,txManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:03:44,222 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 00:03:44,299 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 00:03:44,713 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1sxeoeh3pxvo8|aee320, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1sxeoeh3pxvo8|aee320, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 00:03:45,012 WARN org.springframework.test.context.transaction.TransactionalTestExecutionListener.getTransactionManager() - Caught exception while retrieving transaction manager with bean name [transactionManager] for test context [[TestContext@10c6c6b testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@a1ee92, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@135bdd3 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:277)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1102)
	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.getTransactionManager(TransactionalTestExecutionListener.java:311)
	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:161)
	at org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:358)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:73)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
2015-08-02 00:03:45,013 WARN org.springframework.test.context.TestContextManager.beforeTestMethod() - Caught exception while allowing TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener@41f871] to process 'before' execution of test method [public void com.app.mongodb.MongoDBTest.findAll()] for test instance [com.app.mongodb.MongoDBTest@a1ee92]
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1095)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:277)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1102)
	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.getTransactionManager(TransactionalTestExecutionListener.java:311)
	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:161)
	at org.springframework.test.context.TestContextManager.beforeTestMethod(TestContextManager.java:358)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:73)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
2015-08-02 00:03:45,031 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 00:03:44 CST 2015]; root of context hierarchy
2015-08-02 00:03:45,033 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,txManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:04:54,394 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 00:04:54,578 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 00:04:54 CST 2015]; root of context hierarchy
2015-08-02 00:04:54,720 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 00:04:54,757 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f8c5: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:04:54,771 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 00:04:54,841 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 00:04:55,243 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1sxg6tof62zzg|aee320, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1sxg6tof62zzg|aee320, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 00:04:55,544 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14937e2]; rollback [true]
2015-08-02 00:05:02,750 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:
2015-08-02 00:05:02,859 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@87cbde testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1596138, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@fdd15b testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 00:05:02,863 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 00:04:54 CST 2015]; root of context hierarchy
2015-08-02 00:05:02,865 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f8c5: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:05:17,345 INFO org.springframework.web.context.ContextLoader.initWebApplicationContext() - Root WebApplicationContext: initialization started
2015-08-02 00:05:17,446 INFO org.springframework.web.context.support.XmlWebApplicationContext.prepareRefresh() - Refreshing Root WebApplicationContext: startup date [Sun Aug 02 00:05:17 CST 2015]; root of context hierarchy
2015-08-02 00:05:17,524 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from file [F:\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp3\wtpwebapps\mvc_mybat\WEB-INF\classes\spring-conf\ApplicationContext.xml]
2015-08-02 00:05:17,831 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from file [F:\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp3\wtpwebapps\mvc_mybat\WEB-INF\classes\spring-conf\spring-mongo.xml]
2015-08-02 00:05:18,072 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 00:05:18,118 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e9e40: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:05:18,134 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 00:05:18,198 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 00:05:18,826 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1sxgouo1y1212m|c85a33, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1sxgouo1y1212m|c85a33, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 00:05:19,334 INFO org.springframework.web.context.ContextLoader.initWebApplicationContext() - Root WebApplicationContext: initialization completed in 1987 ms
2015-08-02 00:05:19,385 INFO org.springframework.web.servlet.DispatcherServlet.initServletBean() - FrameworkServlet 'SpringMVC': initialization started
2015-08-02 00:05:19,389 INFO org.springframework.web.context.support.XmlWebApplicationContext.prepareRefresh() - Refreshing WebApplicationContext for namespace 'SpringMVC-servlet': startup date [Sun Aug 02 00:05:19 CST 2015]; parent: Root WebApplicationContext
2015-08-02 00:05:19,391 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from ServletContext resource [/WEB-INF/SpringMVC.xml]
2015-08-02 00:05:19,620 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b4bc8e: defining beans [viewResolver,org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping#0,multipartResolver,redisCacheService,commonService,diamondUserController,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@e9e40
2015-08-02 00:05:19,698 INFO org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping.registerHandler() - Mapped URL path [/diamondUser] onto handler 'diamondUserController'
2015-08-02 00:05:19,699 INFO org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping.registerHandler() - Mapped URL path [/diamondUser/*] onto handler 'diamondUserController'
2015-08-02 00:05:19,901 INFO org.springframework.web.servlet.DispatcherServlet.initServletBean() - FrameworkServlet 'SpringMVC': initialization completed in 516 ms
2015-08-02 00:05:35,649 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 00:05:35,900 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Sun Aug 02 00:05:35 CST 2015]; root of context hierarchy
2015-08-02 00:05:36,018 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 00:05:36,050 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1c8b884: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:05:36,067 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 00:05:36,134 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 00:05:36,585 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1sxh2os13415o|b9b67b, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1sxh2os13415o|b9b67b, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 00:05:36,891 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@b172ef]; rollback [true]
2015-08-02 00:05:38,974 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@19ffd6f: startup date [Sun Aug 02 00:05:38 CST 2015]; root of context hierarchy
2015-08-02 00:05:38,979 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 00:05:39,188 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@15dbaab: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:05:48,875 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 00:05:48,878 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1549f0e testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@9652dd, testMethod = init@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@11a67fe testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 00:05:48,883 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Sun Aug 02 00:05:35 CST 2015]; root of context hierarchy
2015-08-02 00:05:48,884 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1c8b884: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:08:22,620 INFO org.springframework.web.context.support.XmlWebApplicationContext.doClose() - Closing WebApplicationContext for namespace 'SpringMVC-servlet': startup date [Sun Aug 02 00:05:19 CST 2015]; parent: Root WebApplicationContext
2015-08-02 00:08:22,621 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b4bc8e: defining beans [viewResolver,org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping#0,multipartResolver,redisCacheService,commonService,diamondUserController,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@e9e40
2015-08-02 00:08:22,626 INFO org.springframework.web.context.support.XmlWebApplicationContext.doClose() - Closing Root WebApplicationContext: startup date [Sun Aug 02 00:05:17 CST 2015]; root of context hierarchy
2015-08-02 00:08:22,627 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e9e40: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:08:23,015 INFO org.springframework.web.context.ContextLoader.initWebApplicationContext() - Root WebApplicationContext: initialization started
2015-08-02 00:08:23,119 INFO org.springframework.web.context.support.XmlWebApplicationContext.prepareRefresh() - Refreshing Root WebApplicationContext: startup date [Sun Aug 02 00:08:23 CST 2015]; root of context hierarchy
2015-08-02 00:08:23,190 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from file [F:\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp3\wtpwebapps\mvc_mybat\WEB-INF\classes\spring-conf\ApplicationContext.xml]
2015-08-02 00:08:23,504 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from file [F:\workspace\.metadata\.plugins\org.eclipse.wst.server.core\tmp3\wtpwebapps\mvc_mybat\WEB-INF\classes\spring-conf\spring-mongo.xml]
2015-08-02 00:08:23,731 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 00:08:23,785 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@174d546: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:08:23,801 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 00:08:23,850 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 00:08:23,852 WARN com.mchange.v2.c3p0.management.ActiveManagementCoordinator.attemptManageC3P0Registry() - A C3P0Registry mbean is already registered. This probably means that an application using c3p0 was undeployed, but not all PooledDataSources were closed prior to undeployment. This may lead to resource leaks over time. Please take care to close all PooledDataSources.
2015-08-02 00:08:24,422 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1sxko47ua0r26|1ffd5d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1sxko47ua0r26|1ffd5d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 00:11:18,547 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 00:11:18,721 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@64ea66: startup date [Sun Aug 02 00:11:18 CST 2015]; root of context hierarchy
2015-08-02 00:11:18,850 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 00:11:18,878 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:11:18,889 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 00:11:18,960 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 00:11:19,295 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1sxof7m1pumnc6|1581e80, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1sxof7m1pumnc6|1581e80, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 00:11:19,554 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@16dba0a]; rollback [true]
2015-08-02 00:11:19,556 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d36ff3: startup date [Sun Aug 02 00:11:19 CST 2015]; root of context hierarchy
2015-08-02 00:11:19,557 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 00:11:19,584 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@162d950: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:11:19,665 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 00:11:19,672 INFO com.app.mongodb.MongoDBTest.insert() - mongodb findAll:
2015-08-02 00:11:19,676 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@ebf3f0 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@dc4c81, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@122dad5 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 00:11:19,679 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@64ea66: startup date [Sun Aug 02 00:11:18 CST 2015]; root of context hierarchy
2015-08-02 00:11:19,680 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:11:46,441 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 00:11:46,635 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 00:11:46 CST 2015]; root of context hierarchy
2015-08-02 00:11:46,758 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 00:11:46,793 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:11:46,805 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 00:11:46,890 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 00:11:47,314 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1sxp0rk1rcui92|1af328, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1sxp0rk1rcui92|1af328, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 00:11:47,653 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1a4f43e]; rollback [true]
2015-08-02 00:11:50,195 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@fbf107: startup date [Sun Aug 02 00:11:50 CST 2015]; root of context hierarchy
2015-08-02 00:11:50,201 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 00:11:50,383 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e001c8: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:11:53,589 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 00:13:48,436 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:
2015-08-02 00:13:48,448 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@15c693a testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@a029, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@112e9e6 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 00:13:48,458 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 00:11:46 CST 2015]; root of context hierarchy
2015-08-02 00:13:48,459 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:18:38,787 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 00:18:39,187 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 00:18:39 CST 2015]; root of context hierarchy
2015-08-02 00:18:39,383 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 00:18:39,437 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:18:39,461 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 00:18:39,562 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 00:18:40,200 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1sxxv601rsi57r|b9b67b, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1sxxv601rsi57r|b9b67b, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 00:18:40,630 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@ec850]; rollback [true]
2015-08-02 00:18:40,634 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c190a2: startup date [Sun Aug 02 00:18:40 CST 2015]; root of context hierarchy
2015-08-02 00:18:40,636 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 00:18:40,683 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ce8e44: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 00:18:40,860 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 00:18:59,674 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 00:18:59,676 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1d00beb testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1be9101, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@21ec03 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 00:18:59,680 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 00:18:39 CST 2015]; root of context hierarchy
2015-08-02 00:18:59,689 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:28:47,480 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:28:47,858 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 01:28:47 CST 2015]; root of context hierarchy
2015-08-02 01:28:48,023 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:28:48,061 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:28:48,078 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:28:48,163 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:28:48,651 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0g2jt19v9j5w|1af328, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0g2jt19v9j5w|1af328, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:28:49,042 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4b48f4]; rollback [true]
2015-08-02 01:28:49,046 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14bf6b1: startup date [Sun Aug 02 01:28:49 CST 2015]; root of context hierarchy
2015-08-02 01:28:49,048 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:28:49,109 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@11159c: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:28:49,288 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:29:30,774 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 01:29:30,777 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@135bad1 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@7c099b, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15aa584 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:29:30,791 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 01:28:47 CST 2015]; root of context hierarchy
2015-08-02 01:29:30,792 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:29:40,254 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:29:40,518 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 01:29:40 CST 2015]; root of context hierarchy
2015-08-02 01:29:40,665 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:29:40,711 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:29:40,736 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:29:40,820 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:29:41,363 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0h76i5rrv4w|31d5e2, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0h76i5rrv4w|31d5e2, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:29:41,730 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c9586]; rollback [true]
2015-08-02 01:29:41,735 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@64a871: startup date [Sun Aug 02 01:29:41 CST 2015]; root of context hierarchy
2015-08-02 01:29:41,737 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:29:41,777 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1881149: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:29:41,926 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:29:57,777 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:1
2015-08-02 01:29:57,779 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1d6c8b9 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1419d0, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1aac78d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:29:57,791 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 01:29:40 CST 2015]; root of context hierarchy
2015-08-02 01:29:57,792 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:30:21,124 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:30:21,365 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 01:30:21 CST 2015]; root of context hierarchy
2015-08-02 01:30:21,547 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:30:21,601 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:30:21,622 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:30:21,730 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:30:22,243 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0i2qi1lt0ksd|aee320, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0i2qi1lt0ksd|aee320, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:30:22,629 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@f45732]; rollback [true]
2015-08-02 01:30:22,633 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ff366c: startup date [Sun Aug 02 01:30:22 CST 2015]; root of context hierarchy
2015-08-02 01:30:22,634 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:30:22,674 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@174be7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:30:22,816 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:30:26,708 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:1
2015-08-02 01:30:26,714 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@115e166 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@594680, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ec0b testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:30:26,724 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 01:30:21 CST 2015]; root of context hierarchy
2015-08-02 01:30:26,726 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:33:02,494 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:33:02,759 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@64ea66: startup date [Sun Aug 02 01:33:02 CST 2015]; root of context hierarchy
2015-08-02 01:33:02,968 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:33:03,021 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@bf053f: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:33:03,042 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:33:03,168 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:33:03,756 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0ljaojwx5td|1581e80, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0ljaojwx5td|1581e80, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:33:04,164 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14a55e5]; rollback [true]
2015-08-02 01:33:04,166 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d2d58b: startup date [Sun Aug 02 01:33:04 CST 2015]; root of context hierarchy
2015-08-02 01:33:04,168 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:33:04,208 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b52a28: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:33:04,324 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:33:04,333 INFO com.app.mongodb.MongoDBTest.insertSome() - mongodb insert:
2015-08-02 01:33:04,335 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@dab859 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@17cff66, testMethod = insertSome@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@163a320 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:33:04,339 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@64ea66: startup date [Sun Aug 02 01:33:02 CST 2015]; root of context hierarchy
2015-08-02 01:33:04,343 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@bf053f: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:33:14,018 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:33:14,400 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 01:33:14 CST 2015]; root of context hierarchy
2015-08-02 01:33:14,618 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:33:14,680 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:33:14,708 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:33:14,869 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:33:15,659 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0lsapwtzgdx|1af328, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0lsapwtzgdx|1af328, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:33:16,199 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1b277f0]; rollback [true]
2015-08-02 01:33:16,204 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d95bc3: startup date [Sun Aug 02 01:33:16 CST 2015]; root of context hierarchy
2015-08-02 01:33:16,206 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:33:16,251 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e8b957: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:33:16,475 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:33:31,295 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:1
2015-08-02 01:33:31,299 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@181298a testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@ce4dda, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@594680 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:33:31,326 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 01:33:14 CST 2015]; root of context hierarchy
2015-08-02 01:33:31,327 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:33:41,527 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:33:41,825 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 01:33:41 CST 2015]; root of context hierarchy
2015-08-02 01:33:42,030 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:33:42,065 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:33:42,077 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:33:42,179 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:33:42,590 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0mdeo10dxbbj|1d47b2b, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0mdeo10dxbbj|1d47b2b, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:33:42,965 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@63f09e]; rollback [true]
2015-08-02 01:33:42,972 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5b28c9: startup date [Sun Aug 02 01:33:42 CST 2015]; root of context hierarchy
2015-08-02 01:33:42,977 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:33:43,041 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ec8784: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:33:43,196 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:33:43,205 INFO com.app.mongodb.MongoDBTest.insertSome() - mongodb insert:
2015-08-02 01:33:43,210 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@15c6c8d testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@dab859, testMethod = insertSome@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@17cff66 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:33:43,215 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 01:33:41 CST 2015]; root of context hierarchy
2015-08-02 01:33:43,216 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:34:09,767 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:34:10,083 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 01:34:10 CST 2015]; root of context hierarchy
2015-08-02 01:34:10,322 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:34:10,369 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:34:10,389 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:34:10,465 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:34:11,122 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0mz8sztkivd|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0mz8sztkivd|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:34:11,611 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1711922]; rollback [true]
2015-08-02 01:34:11,614 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@85ef33: startup date [Sun Aug 02 01:34:11 CST 2015]; root of context hierarchy
2015-08-02 01:34:11,615 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:34:11,654 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@73cda1: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:34:11,832 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:34:19,095 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:2
2015-08-02 01:34:19,101 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@30b329 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1425941, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@492138 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:34:19,113 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 01:34:10 CST 2015]; root of context hierarchy
2015-08-02 01:34:19,115 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:34:27,481 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:34:27,873 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 01:34:27 CST 2015]; root of context hierarchy
2015-08-02 01:34:28,094 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:34:28,154 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:34:28,178 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:34:28,291 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:34:28,867 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0nczi59t3xu|b9b67b, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0nczi59t3xu|b9b67b, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:34:29,324 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@592bb1]; rollback [true]
2015-08-02 01:34:29,329 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@cab3bf: startup date [Sun Aug 02 01:34:29 CST 2015]; root of context hierarchy
2015-08-02 01:34:29,331 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:34:29,380 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1952be0: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:34:29,614 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:34:34,623 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 01:34:34,627 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@ec7913 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1010435, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bb73b0 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:34:34,638 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 01:34:27 CST 2015]; root of context hierarchy
2015-08-02 01:34:34,640 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:36:38,739 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:36:39,073 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 01:36:39 CST 2015]; root of context hierarchy
2015-08-02 01:36:39,322 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:36:39,398 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:36:39,425 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:36:39,518 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:36:40,100 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0q6901xbj0sg|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0q6901xbj0sg|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:36:40,611 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1ed9a12]; rollback [true]
2015-08-02 01:36:40,616 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6e153c: startup date [Sun Aug 02 01:36:40 CST 2015]; root of context hierarchy
2015-08-02 01:36:40,618 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:36:40,706 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7fb3fa: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:36:41,078 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:36:44,528 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 01:36:44,533 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@14f1252 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@3bdcbb, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@188a8c testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:36:44,541 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 01:36:39 CST 2015]; root of context hierarchy
2015-08-02 01:36:44,544 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:37:01,010 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:37:01,330 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 01:37:01 CST 2015]; root of context hierarchy
2015-08-02 01:37:01,551 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:37:01,606 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:37:01,625 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:37:01,724 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:37:02,387 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0qndt1qjabj3|b9b67b, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0qndt1qjabj3|b9b67b, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:37:02,941 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4a1908]; rollback [true]
2015-08-02 01:37:02,946 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1896444: startup date [Sun Aug 02 01:37:02 CST 2015]; root of context hierarchy
2015-08-02 01:37:02,948 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:37:02,995 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@f7d5a6: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:37:03,173 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:37:09,008 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 01:37:09,010 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@4301c9 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@12a375b, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@986c47 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:37:09,025 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 01:37:01 CST 2015]; root of context hierarchy
2015-08-02 01:37:09,026 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:37:50,312 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:37:50,669 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 01:37:50 CST 2015]; root of context hierarchy
2015-08-02 01:37:50,928 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:37:50,986 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:37:51,011 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:37:51,113 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:37:51,869 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0rphpm134eg|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0rphpm134eg|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:37:52,355 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1f72eec]; rollback [true]
2015-08-02 01:37:52,359 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@9d9065: startup date [Sun Aug 02 01:37:52 CST 2015]; root of context hierarchy
2015-08-02 01:37:52,361 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:37:52,400 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14536e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:37:52,572 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:37:58,174 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 01:37:58,177 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@710324 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1855ac4, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a3830 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:37:58,182 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 01:37:50 CST 2015]; root of context hierarchy
2015-08-02 01:37:58,185 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:43:39,121 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:43:39,336 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 01:43:39 CST 2015]; root of context hierarchy
2015-08-02 01:43:39,490 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:43:39,531 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:43:39,544 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:43:39,608 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:43:40,079 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t0z6enrwzs0z|1af328, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t0z6enrwzs0z|1af328, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:43:40,453 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1f40a61]; rollback [true]
2015-08-02 01:43:40,457 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@17df9ec: startup date [Sun Aug 02 01:43:40 CST 2015]; root of context hierarchy
2015-08-02 01:43:40,459 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:43:40,493 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@596a7a: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:43:40,627 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:43:43,397 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 01:43:43,399 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@9fe5c5 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1a5fc52, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@58924a testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:43:43,403 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 01:43:39 CST 2015]; root of context hierarchy
2015-08-02 01:43:43,405 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:51:09,077 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:51:09,363 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 01:51:09 CST 2015]; root of context hierarchy
2015-08-02 01:51:09,583 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:51:09,637 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:51:09,658 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:51:09,749 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:51:10,308 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t18tq94827c3|1c160cb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t18tq94827c3|1c160cb, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:51:10,822 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@13cbbbf]; rollback [true]
2015-08-02 01:51:10,825 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6ec21a: startup date [Sun Aug 02 01:51:10 CST 2015]; root of context hierarchy
2015-08-02 01:51:10,827 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:51:10,881 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2709da: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:51:11,056 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:51:13,220 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 01:51:13,222 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1fac352 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@2d6583, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@d77f83 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:51:13,226 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 01:51:09 CST 2015]; root of context hierarchy
2015-08-02 01:51:13,229 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:57:26,728 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 01:57:27,086 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 01:57:27 CST 2015]; root of context hierarchy
2015-08-02 01:57:27,257 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 01:57:27,297 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:57:27,319 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 01:57:27,397 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 01:57:27,930 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t1gx4oh4vgv8|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t1gx4oh4vgv8|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 01:57:28,382 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@f45732]; rollback [true]
2015-08-02 01:57:28,385 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ff366c: startup date [Sun Aug 02 01:57:28 CST 2015]; root of context hierarchy
2015-08-02 01:57:28,388 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 01:57:28,431 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@174be7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 01:57:28,606 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 01:57:32,353 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:2
2015-08-02 01:57:32,360 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@21ec03 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1ba3f9a, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a5d7f2 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 01:57:32,370 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 01:57:27 CST 2015]; root of context hierarchy
2015-08-02 01:57:32,371 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:20:22,404 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:20:22,756 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 02:20:22 CST 2015]; root of context hierarchy
2015-08-02 02:20:22,929 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:20:22,986 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:20:23,010 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:20:23,101 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:20:23,714 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t2aemf196n859|1d12614, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t2aemf196n859|1d12614, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:20:24,109 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1e0338f]; rollback [true]
2015-08-02 02:20:24,112 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1787a6: startup date [Sun Aug 02 02:20:24 CST 2015]; root of context hierarchy
2015-08-02 02:20:24,114 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:20:24,151 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e001c8: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:20:24,153 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e001c8: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:20:24,155 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@64064b testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@d942d9, testMethod = findById@MongoDBTest, testException = org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.data.document.mongodb.MongoFactoryBean] for bean with name 'mongo' defined in class path resource [spring-conf/spring-mongo.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.data.document.mongodb.MongoFactoryBean, mergedContextConfiguration = [MergedContextConfiguration@13ca972 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:20:24,163 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 02:20:22 CST 2015]; root of context hierarchy
2015-08-02 02:20:24,164 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:21:35,588 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:21:35,914 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@157ea4a: startup date [Sun Aug 02 02:21:35 CST 2015]; root of context hierarchy
2015-08-02 02:21:36,077 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:21:36,122 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:21:36,141 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:21:36,224 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:21:36,782 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t2bz1s146lvld|1e45e3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t2bz1s146lvld|1e45e3, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:21:37,206 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@87cbde]; rollback [true]
2015-08-02 02:21:37,210 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@b799cf: startup date [Sun Aug 02 02:21:37 CST 2015]; root of context hierarchy
2015-08-02 02:21:37,212 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:21:37,261 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17cd18d: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:21:37,264 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17cd18d: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:21:37,266 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@397cea testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@380dbe, testMethod = findById@MongoDBTest, testException = org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.data.document.mongodb.MongoFactoryBean] for bean with name 'mongo' defined in class path resource [spring-conf/spring-mongo.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.data.document.mongodb.MongoFactoryBean, mergedContextConfiguration = [MergedContextConfiguration@1869929 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:21:37,278 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@157ea4a: startup date [Sun Aug 02 02:21:35 CST 2015]; root of context hierarchy
2015-08-02 02:21:37,280 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:22:20,047 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:22:20,303 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@157ea4a: startup date [Sun Aug 02 02:22:20 CST 2015]; root of context hierarchy
2015-08-02 02:22:20,476 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:22:20,519 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ac615: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:22:20,534 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:22:20,613 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:22:21,190 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t2cxavdyruez|1af328, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t2cxavdyruez|1af328, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:22:21,601 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1593225]; rollback [true]
2015-08-02 02:22:21,605 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d03350: startup date [Sun Aug 02 02:22:21 CST 2015]; root of context hierarchy
2015-08-02 02:22:21,606 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:22:21,647 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@24cdc7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:22:21,648 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@24cdc7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:22:21,650 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@de1cb6 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@2f06b6, testMethod = findById@MongoDBTest, testException = org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [org.springframework.data.document.mongodb.MongoFactoryBean] for bean with name 'mongo' defined in class path resource [spring-conf/spring-mongo.xml]; nested exception is java.lang.ClassNotFoundException: org.springframework.data.document.mongodb.MongoFactoryBean, mergedContextConfiguration = [MergedContextConfiguration@eb73e testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:22:21,666 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@157ea4a: startup date [Sun Aug 02 02:22:20 CST 2015]; root of context hierarchy
2015-08-02 02:22:21,667 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ac615: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:24:45,168 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:24:45,439 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 02:24:45 CST 2015]; root of context hierarchy
2015-08-02 02:24:45,608 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:24:45,666 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:24:45,698 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:24:45,794 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:24:46,313 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t2g1b71ni3dgt|1e45e3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t2g1b71ni3dgt|1e45e3, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:24:46,715 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4cb3a4]; rollback [true]
2015-08-02 02:24:46,719 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@f4c9c4: startup date [Sun Aug 02 02:24:46 CST 2015]; root of context hierarchy
2015-08-02 02:24:46,721 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:24:46,764 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1a0c382 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@183bfee, testMethod = findById@MongoDBTest, testException = org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from class path resource [spring-conf/spring-mongo.xml]; nested exception is org.springframework.beans.FatalBeanException: Invalid NamespaceHandler class [org.springframework.data.mongodb.config.MongoNamespaceHandler] for namespace [http://www.springframework.org/schema/data/mongo]: problem with handler class file or dependent class; nested exception is java.lang.NoClassDefFoundError: org/springframework/data/repository/config/RepositoryConfigurationExtension, mergedContextConfiguration = [MergedContextConfiguration@15978e7 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:24:46,778 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 02:24:45 CST 2015]; root of context hierarchy
2015-08-02 02:24:46,781 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:28:09,377 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:28:09,690 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 02:28:09 CST 2015]; root of context hierarchy
2015-08-02 02:28:09,887 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:28:09,932 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:28:09,956 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:28:10,038 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:28:10,585 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t2kewy1qh7sqg|1d12614, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t2kewy1qh7sqg|1d12614, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:28:11,016 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d57bcb]; rollback [true]
2015-08-02 02:28:11,020 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1a32902: startup date [Sun Aug 02 02:28:11 CST 2015]; root of context hierarchy
2015-08-02 02:28:11,023 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:28:11,146 WARN org.springframework.beans.factory.xml.XmlBeanDefinitionReader.warning() - Ignored XML validation warning
org.xml.sax.SAXParseException: SchemaLocation: schemaLocation value = 'http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd         http://www.springframework.org/schema/data/mongo           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd' must have even number of URI's.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:96)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:380)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:417)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.storeLocations(XMLSchemaValidator.java:2358)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1769)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:705)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:626)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3103)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:922)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:235)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:174)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:209)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:243)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:127)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:93)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:131)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:527)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:441)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.app.mongodb.MongoDBTest.init(MongoDBTest.java:24)
	at com.app.mongodb.MongoDBTest.findById(MongoDBTest.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
2015-08-02 02:28:11,201 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@24de67: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,diamonduser,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:28:11,236 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@7c8865 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1dea651, testMethod = findById@MongoDBTest, testException = java.lang.NoClassDefFoundError: org/springframework/data/convert/EntityReader, mergedContextConfiguration = [MergedContextConfiguration@791901 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:28:11,244 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 02:28:09 CST 2015]; root of context hierarchy
2015-08-02 02:28:11,245 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:29:22,524 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:29:22,845 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d6b059: startup date [Sun Aug 02 02:29:22 CST 2015]; root of context hierarchy
2015-08-02 02:29:23,041 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:29:23,085 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:29:23,108 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:29:23,187 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:29:23,678 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t2lzcu1rene6b|1d12614, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t2lzcu1rene6b|1d12614, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:29:24,112 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1bfbe18]; rollback [true]
2015-08-02 02:29:24,115 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c98360: startup date [Sun Aug 02 02:29:24 CST 2015]; root of context hierarchy
2015-08-02 02:29:24,117 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:29:24,154 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@e77ca4 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1a83205, testMethod = findById@MongoDBTest, testException = org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from class path resource [spring-conf/spring-mongo.xml]; nested exception is org.springframework.beans.FatalBeanException: Invalid NamespaceHandler class [org.springframework.data.mongodb.config.MongoNamespaceHandler] for namespace [http://www.springframework.org/schema/data/mongo]: problem with handler class file or dependent class; nested exception is java.lang.NoClassDefFoundError: org/springframework/data/repository/config/RepositoryConfigurationExtension, mergedContextConfiguration = [MergedContextConfiguration@10d16b testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:29:24,163 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d6b059: startup date [Sun Aug 02 02:29:22 CST 2015]; root of context hierarchy
2015-08-02 02:29:24,165 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:37:06,571 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:37:06,874 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 02:37:06 CST 2015]; root of context hierarchy
2015-08-02 02:37:07,038 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:37:07,078 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:37:07,097 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:37:07,167 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:37:07,657 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t2vxdg1qyuo7m|1c160cb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t2vxdg1qyuo7m|1c160cb, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:37:08,037 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@f45732]; rollback [true]
2015-08-02 02:37:08,040 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ff366c: startup date [Sun Aug 02 02:37:08 CST 2015]; root of context hierarchy
2015-08-02 02:37:08,042 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:37:08,078 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@174be7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:37:08,222 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:37:11,784 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:2
2015-08-02 02:37:11,789 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1a8bf52 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1a8c22b, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1d00beb testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:37:11,799 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 02:37:06 CST 2015]; root of context hierarchy
2015-08-02 02:37:11,802 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:46:43,825 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:46:44,117 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 02:46:44 CST 2015]; root of context hierarchy
2015-08-02 02:46:44,287 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:46:44,346 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:46:44,374 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:46:44,470 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:46:45,047 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t38ata1r8h27e|aee320, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t38ata1r8h27e|aee320, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:46:45,457 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c9586]; rollback [true]
2015-08-02 02:46:45,461 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@64a871: startup date [Sun Aug 02 02:46:45 CST 2015]; root of context hierarchy
2015-08-02 02:46:45,462 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:46:45,504 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1881149: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:46:45,669 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:46:50,149 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 02:46:50,152 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@ecabac testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1fac352, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d6583 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:46:50,163 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 02:46:44 CST 2015]; root of context hierarchy
2015-08-02 02:46:50,165 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:47:09,148 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:47:09,426 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 02:47:09 CST 2015]; root of context hierarchy
2015-08-02 02:47:09,633 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:47:09,692 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:47:09,712 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:47:09,795 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:47:10,383 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t38ucx6jzjvv|151fe8a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t38ucx6jzjvv|151fe8a, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:47:10,780 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4a1908]; rollback [true]
2015-08-02 02:47:10,784 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1896444: startup date [Sun Aug 02 02:47:10 CST 2015]; root of context hierarchy
2015-08-02 02:47:10,785 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:47:10,824 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@f7d5a6: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:47:10,993 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:47:15,220 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 02:47:15,222 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@986c47 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@ecabac, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fac352 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:47:15,227 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 02:47:09 CST 2015]; root of context hierarchy
2015-08-02 02:47:15,229 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:52:17,396 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:52:17,720 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 02:52:17 CST 2015]; root of context hierarchy
2015-08-02 02:52:17,941 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:52:18,003 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:52:18,025 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:52:18,112 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:52:18,693 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t3fg981r4c94|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t3fg981r4c94|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:52:19,203 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1bfbe18]; rollback [true]
2015-08-02 02:52:19,209 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c98360: startup date [Sun Aug 02 02:52:19 CST 2015]; root of context hierarchy
2015-08-02 02:52:19,211 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:52:19,255 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@fa1b85: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:52:19,420 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:52:22,980 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@3256a5 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@d6866f, testMethod = findById@MongoDBTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@13f347 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:52:22,995 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 02:52:17 CST 2015]; root of context hierarchy
2015-08-02 02:52:22,997 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:52:33,451 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:52:33,760 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@157ea4a: startup date [Sun Aug 02 02:52:33 CST 2015]; root of context hierarchy
2015-08-02 02:52:33,975 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:52:34,021 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f2be27: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:52:34,044 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:52:34,126 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:52:34,781 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t3fsm3cv4i3p|1e45e3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t3fsm3cv4i3p|1e45e3, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:52:35,225 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d95bc3]; rollback [true]
2015-08-02 02:52:35,228 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d62a85: startup date [Sun Aug 02 02:52:35 CST 2015]; root of context hierarchy
2015-08-02 02:52:35,230 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:52:35,275 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@10d16b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:52:35,448 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:52:35,453 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@d81cda testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@4e57ba, testMethod = findById@MongoDBTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@1619137 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:52:35,461 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@157ea4a: startup date [Sun Aug 02 02:52:33 CST 2015]; root of context hierarchy
2015-08-02 02:52:35,462 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f2be27: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:52:52,648 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:52:52,989 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@157ea4a: startup date [Sun Aug 02 02:52:52 CST 2015]; root of context hierarchy
2015-08-02 02:52:53,196 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:52:53,235 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f2be27: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:52:53,259 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:52:53,367 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:52:53,958 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t3g7fz11nep6c|1e45e3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t3g7fz11nep6c|1e45e3, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:52:54,385 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1f0c3ef]; rollback [true]
2015-08-02 02:52:54,389 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ae39fb: startup date [Sun Aug 02 02:52:54 CST 2015]; root of context hierarchy
2015-08-02 02:52:54,391 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:52:54,433 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1d17f01: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:52:54,668 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:52:59,434 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1f4a427 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@451610, testMethod = findById@MongoDBTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@1ab8f3f testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:52:59,454 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@157ea4a: startup date [Sun Aug 02 02:52:52 CST 2015]; root of context hierarchy
2015-08-02 02:52:59,455 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f2be27: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:55:31,596 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:55:31,907 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 02:55:31 CST 2015]; root of context hierarchy
2015-08-02 02:55:32,079 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:55:32,119 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:55:32,144 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:55:32,249 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:55:32,821 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t3jm1q1h354mt|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t3jm1q1h354mt|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:55:33,279 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1b277f0]; rollback [true]
2015-08-02 02:55:33,283 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d95bc3: startup date [Sun Aug 02 02:55:33 CST 2015]; root of context hierarchy
2015-08-02 02:55:33,285 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:55:33,325 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e8b957: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:55:33,554 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:56:11,666 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 02:56:11,669 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@11e8d5c testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@d2ad3c, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@16b4be5 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:56:11,685 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 02:55:31 CST 2015]; root of context hierarchy
2015-08-02 02:56:11,686 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:57:11,074 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:57:11,336 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 02:57:11 CST 2015]; root of context hierarchy
2015-08-02 02:57:11,504 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:57:11,548 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:57:11,563 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:57:11,646 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:57:12,236 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t3lqr217r1ahj|151fe8a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t3lqr217r1ahj|151fe8a, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:57:12,666 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@ccfa5e]; rollback [true]
2015-08-02 02:57:12,670 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@cb741e: startup date [Sun Aug 02 02:57:12 CST 2015]; root of context hierarchy
2015-08-02 02:57:12,672 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:57:12,717 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@128d900: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:57:12,883 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:57:12,892 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 02:57:12,895 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1a84fae testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1075056, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@12b71eb testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:57:12,899 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 02:57:11 CST 2015]; root of context hierarchy
2015-08-02 02:57:12,900 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:57:24,715 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:57:25,085 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 02:57:25 CST 2015]; root of context hierarchy
2015-08-02 02:57:25,253 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:57:25,308 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:57:25,325 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:57:25,420 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:57:26,101 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t3m1df172g95r|1e45e3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t3m1df172g95r|1e45e3, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:57:26,599 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1b277f0]; rollback [true]
2015-08-02 02:57:26,603 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d95bc3: startup date [Sun Aug 02 02:57:26 CST 2015]; root of context hierarchy
2015-08-02 02:57:26,605 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:57:26,645 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e8b957: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:57:26,800 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:58:13,459 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 02:58:13,462 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1342097 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@5d50c4, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@61b29f testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:58:13,467 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 02:57:25 CST 2015]; root of context hierarchy
2015-08-02 02:58:13,470 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:58:50,201 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:58:50,431 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 02:58:50 CST 2015]; root of context hierarchy
2015-08-02 02:58:50,547 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:58:50,601 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:58:50,619 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:58:50,734 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:58:51,125 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t3nv6o1lrogm9|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t3nv6o1lrogm9|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:58:51,440 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@63f09e]; rollback [true]
2015-08-02 02:58:51,443 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5b28c9: startup date [Sun Aug 02 02:58:51 CST 2015]; root of context hierarchy
2015-08-02 02:58:51,444 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:58:51,475 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ec8784: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:58:51,584 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:58:51,609 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 02:58:51,611 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@15c6c8d testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@dab859, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@17cff66 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:58:51,618 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 02:58:50 CST 2015]; root of context hierarchy
2015-08-02 02:58:51,618 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:58:58,615 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 02:58:58,906 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 02:58:58 CST 2015]; root of context hierarchy
2015-08-02 02:58:59,112 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 02:58:59,176 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:58:59,202 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 02:58:59,315 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 02:59:00,046 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t3o1ta18qi74g|aee320, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t3o1ta18qi74g|aee320, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 02:59:00,502 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@b172ef]; rollback [true]
2015-08-02 02:59:00,507 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@115c6cb: startup date [Sun Aug 02 02:59:00 CST 2015]; root of context hierarchy
2015-08-02 02:59:00,509 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 02:59:00,546 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@eba9b0: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 02:59:00,694 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 02:59:22,652 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 02:59:22,655 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1716286 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@fb65cc, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@d861b7 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 02:59:22,660 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 02:58:58 CST 2015]; root of context hierarchy
2015-08-02 02:59:22,662 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:01:58,941 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 03:01:59,228 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 03:01:59 CST 2015]; root of context hierarchy
2015-08-02 03:01:59,432 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 03:01:59,491 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:01:59,512 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 03:01:59,588 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 03:02:00,181 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t3rwxh12b16zn|1e45e3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t3rwxh12b16zn|1e45e3, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 03:02:00,584 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@592bb1]; rollback [true]
2015-08-02 03:02:00,587 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@cab3bf: startup date [Sun Aug 02 03:02:00 CST 2015]; root of context hierarchy
2015-08-02 03:02:00,588 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 03:02:00,629 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1952be0: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:02:00,786 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 03:02:19,274 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 03:02:19,276 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@61b29f testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@15e6f8, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1eeb95e testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 03:02:19,282 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 03:01:59 CST 2015]; root of context hierarchy
2015-08-02 03:02:19,284 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:02:42,176 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 03:02:42,449 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 03:02:42 CST 2015]; root of context hierarchy
2015-08-02 03:02:42,670 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 03:02:42,732 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f2be27: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:02:42,760 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 03:02:42,886 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 03:02:43,552 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t3sub816eylxr|151fe8a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t3sub816eylxr|151fe8a, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 03:02:43,986 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1f40a61]; rollback [true]
2015-08-02 03:02:43,989 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@17df9ec: startup date [Sun Aug 02 03:02:43 CST 2015]; root of context hierarchy
2015-08-02 03:02:43,990 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 03:02:44,027 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@596a7a: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:02:44,185 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 03:02:50,136 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 03:02:50,138 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@14cc34b testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@a980fa, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@52d2c4 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 03:02:50,143 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 03:02:42 CST 2015]; root of context hierarchy
2015-08-02 03:02:50,145 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1f2be27: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:09:00,116 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 03:09:00,403 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 03:09:00 CST 2015]; root of context hierarchy
2015-08-02 03:09:00,593 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 03:09:00,648 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:09:00,664 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 03:09:00,745 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 03:09:01,309 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t40xw674rgvy|1c160cb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t40xw674rgvy|1c160cb, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 03:09:01,717 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c9586]; rollback [true]
2015-08-02 03:09:01,721 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@64a871: startup date [Sun Aug 02 03:09:01 CST 2015]; root of context hierarchy
2015-08-02 03:09:01,722 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 03:09:01,758 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1881149: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:09:01,947 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 03:09:04,379 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 03:09:04,381 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@18a4622 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1026e40, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9468ca testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 03:09:04,385 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 03:09:00 CST 2015]; root of context hierarchy
2015-08-02 03:09:04,386 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:09:35,661 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 03:09:36,007 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 03:09:36 CST 2015]; root of context hierarchy
2015-08-02 03:09:36,190 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 03:09:36,236 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:09:36,262 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 03:09:36,372 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 03:09:36,939 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t41pdb1dgysqm|151fe8a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t41pdb1dgysqm|151fe8a, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 03:09:37,353 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@be9589]; rollback [true]
2015-08-02 03:09:37,359 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@10b5129: startup date [Sun Aug 02 03:09:37 CST 2015]; root of context hierarchy
2015-08-02 03:09:37,362 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 03:09:37,407 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@8d7a1f: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 03:09:37,609 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 03:09:42,654 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 03:09:42,658 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@e78de7 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@154991, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@190f07c testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 03:09:42,663 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d3c65d: startup date [Sun Aug 02 03:09:36 CST 2015]; root of context hierarchy
2015-08-02 03:09:42,665 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:01:02,046 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:01:02,452 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 05:01:02 CST 2015]; root of context hierarchy
2015-08-02 05:01:02,624 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:01:02,669 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:01:02,683 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:01:02,779 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:01:03,384 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t810n09h91y8|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t810n09h91y8|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:01:03,827 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@cca979]; rollback [true]
2015-08-02 05:01:03,835 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b1fc3: startup date [Sun Aug 02 05:01:03 CST 2015]; root of context hierarchy
2015-08-02 05:01:03,838 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:01:03,892 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@8754db: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:01:04,051 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:01:37,101 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 05:01:37,105 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1a5d7a testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@ef0a2e, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1856700 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:01:37,113 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 05:01:02 CST 2015]; root of context hierarchy
2015-08-02 05:01:37,116 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:04:07,701 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:04:08,019 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1d0d45b: startup date [Sun Aug 02 05:04:08 CST 2015]; root of context hierarchy
2015-08-02 05:04:08,251 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:04:08,325 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6147d9: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:04:08,355 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:04:08,468 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:04:09,218 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t84zwx1ape33s|111089b, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t84zwx1ape33s|111089b, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:04:09,684 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d0d75]; rollback [true]
2015-08-02 05:04:09,689 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@87cbde: startup date [Sun Aug 02 05:04:09 CST 2015]; root of context hierarchy
2015-08-02 05:04:09,691 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:04:09,733 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1cfa4b2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:04:09,916 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:04:13,958 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-02 05:04:13,961 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@d8f246 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@109eab7, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10cf62 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:04:13,965 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (2): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d0d75]; rollback [true]
2015-08-02 05:04:13,966 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@11e8d5c: startup date [Sun Aug 02 05:04:13 CST 2015]; root of context hierarchy
2015-08-02 05:04:13,975 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:04:14,002 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a4250a: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:04:14,025 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:04:15,358 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:2
2015-08-02 05:04:15,360 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@d8f246 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@2e64c1, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10cf62 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:04:15,365 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (3): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d0d75]; rollback [true]
2015-08-02 05:04:15,366 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4a7629: startup date [Sun Aug 02 05:04:15 CST 2015]; root of context hierarchy
2015-08-02 05:04:15,368 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:04:15,405 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e04033: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:04:15,429 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:04:25,047 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 05:04:25,049 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@d8f246 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@af7a1f, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10cf62 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:04:25,051 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (4): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d0d75]; rollback [true]
2015-08-02 05:04:25,052 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@cf08b1: startup date [Sun Aug 02 05:04:25 CST 2015]; root of context hierarchy
2015-08-02 05:04:25,054 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:04:25,089 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1acc1c2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:04:25,110 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:04:25,113 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@d8f246 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@16e0356, testMethod = init@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10cf62 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:04:25,115 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (5): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d0d75]; rollback [true]
2015-08-02 05:04:25,116 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1125fac: startup date [Sun Aug 02 05:04:25 CST 2015]; root of context hierarchy
2015-08-02 05:04:25,117 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:04:25,151 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b09fac: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:04:25,166 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:04:27,448 INFO com.app.mongodb.MongoDBTest.insertSome() - mongodb insert:
2015-08-02 05:04:27,450 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@d8f246 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1dfb0b5, testMethod = insertSome@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10cf62 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:04:27,508 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1d0d45b: startup date [Sun Aug 02 05:04:08 CST 2015]; root of context hierarchy
2015-08-02 05:04:27,510 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6147d9: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:05:08,155 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:05:08,448 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 05:05:08 CST 2015]; root of context hierarchy
2015-08-02 05:05:08,614 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:05:08,661 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:05:08,675 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:05:08,751 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:05:09,280 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t86afymltkn3|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t86afymltkn3|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:05:09,716 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1a4f43e]; rollback [true]
2015-08-02 05:05:09,720 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14afef4: startup date [Sun Aug 02 05:05:09 CST 2015]; root of context hierarchy
2015-08-02 05:05:09,723 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:05:09,765 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1330af4: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:05:09,947 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:06:40,950 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 05:06:40,953 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@80d0bb testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@107c405, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@d63b5b testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:06:40,960 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1843a75: startup date [Sun Aug 02 05:05:08 CST 2015]; root of context hierarchy
2015-08-02 05:06:40,961 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:08:00,617 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:08:00,881 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@d6b059: startup date [Sun Aug 02 05:08:00 CST 2015]; root of context hierarchy
2015-08-02 05:08:01,071 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:08:01,120 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:08:01,147 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:08:01,224 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:08:01,750 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t89zitx2nb2c|1e45e3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t89zitx2nb2c|1e45e3, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:08:02,213 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@9f26c7]; rollback [true]
2015-08-02 05:08:02,218 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@a866a9: startup date [Sun Aug 02 05:08:02 CST 2015]; root of context hierarchy
2015-08-02 05:08:02,220 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:08:02,259 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14512e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:08:02,426 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:08:17,449 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 05:08:17,452 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@110f850 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@11e8d5c, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@d2ad3c testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:08:17,461 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@d6b059: startup date [Sun Aug 02 05:08:00 CST 2015]; root of context hierarchy
2015-08-02 05:08:17,464 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:08:57,558 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:08:57,815 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 05:08:57 CST 2015]; root of context hierarchy
2015-08-02 05:08:58,018 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:08:58,065 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:08:58,085 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:08:58,181 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:08:58,703 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t8b7gr74h78e|aee320, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t8b7gr74h78e|aee320, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:08:59,098 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@17b9a9f]; rollback [true]
2015-08-02 05:08:59,102 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@3470c3: startup date [Sun Aug 02 05:08:59 CST 2015]; root of context hierarchy
2015-08-02 05:08:59,104 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:08:59,147 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@13cb0c4: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:08:59,287 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:09:07,294 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 05:09:07,296 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@a53bd7 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1fbaff8, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ddfd3e testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:09:07,316 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 05:08:57 CST 2015]; root of context hierarchy
2015-08-02 05:09:07,322 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:12:02,401 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:12:02,664 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1e78fc6: startup date [Sun Aug 02 05:12:02 CST 2015]; root of context hierarchy
2015-08-02 05:12:02,795 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:12:02,838 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a61172: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:12:02,864 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:12:02,948 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:12:03,311 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t8f61gg3n4j|8f9a32, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t8f61gg3n4j|8f9a32, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:12:03,664 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d0f59e]; rollback [true]
2015-08-02 05:12:03,667 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@15af049: startup date [Sun Aug 02 05:12:03 CST 2015]; root of context hierarchy
2015-08-02 05:12:03,670 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:12:03,707 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@a937cd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:12:03,830 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:12:03,842 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-02 05:12:03,844 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@14ce5eb testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@18abc7b, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15c6c8d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:12:03,848 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (2): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d0f59e]; rollback [true]
2015-08-02 05:12:03,848 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@e8f8c5: startup date [Sun Aug 02 05:12:03 CST 2015]; root of context hierarchy
2015-08-02 05:12:03,853 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:12:03,887 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@39be68: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:12:03,899 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:12:03,909 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:2
2015-08-02 05:12:03,910 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@14ce5eb testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@4e17f9, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15c6c8d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:12:03,911 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (3): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d0f59e]; rollback [true]
2015-08-02 05:12:03,914 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@19299f5: startup date [Sun Aug 02 05:12:03 CST 2015]; root of context hierarchy
2015-08-02 05:12:03,915 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:12:03,940 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@a37c6a: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:12:03,949 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:12:03,954 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 05:12:03,955 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@14ce5eb testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@ac4d3b, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15c6c8d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:12:03,957 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (4): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d0f59e]; rollback [true]
2015-08-02 05:12:03,957 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d51a54: startup date [Sun Aug 02 05:12:03 CST 2015]; root of context hierarchy
2015-08-02 05:12:03,958 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:12:03,979 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ad4d40: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:12:03,994 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:12:03,998 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@14ce5eb testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@86d1da, testMethod = init@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15c6c8d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:12:04,000 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (5): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d0f59e]; rollback [true]
2015-08-02 05:12:04,001 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1b5a40a: startup date [Sun Aug 02 05:12:04 CST 2015]; root of context hierarchy
2015-08-02 05:12:04,003 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:12:04,032 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@19977bd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:12:04,043 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:12:04,049 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@14ce5eb testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1503458, testMethod = insertSome@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15c6c8d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:12:04,056 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1e78fc6: startup date [Sun Aug 02 05:12:02 CST 2015]; root of context hierarchy
2015-08-02 05:12:04,056 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a61172: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:12:13,457 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:12:13,710 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 05:12:13 CST 2015]; root of context hierarchy
2015-08-02 05:12:13,926 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:12:13,981 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:12:14,002 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:12:14,079 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:12:14,631 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t8femp1smn4xh|1c160cb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t8femp1smn4xh|1c160cb, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:12:15,030 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4cb3a4]; rollback [true]
2015-08-02 05:12:15,033 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@f4c9c4: startup date [Sun Aug 02 05:12:15 CST 2015]; root of context hierarchy
2015-08-02 05:12:15,035 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:12:15,066 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@197833e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:12:15,238 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:12:40,842 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:10
2015-08-02 05:12:40,850 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@441371 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@15887db, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@13f67a9 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:12:40,864 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 05:12:13 CST 2015]; root of context hierarchy
2015-08-02 05:12:40,866 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:18:39,031 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:18:39,333 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 05:18:39 CST 2015]; root of context hierarchy
2015-08-02 05:18:39,509 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:18:39,560 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:18:39,582 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:18:39,666 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:18:40,368 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t8no581u96yve|b9b67b, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t8no581u96yve|b9b67b, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:18:40,805 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1593225]; rollback [true]
2015-08-02 05:18:40,808 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d03350: startup date [Sun Aug 02 05:18:40 CST 2015]; root of context hierarchy
2015-08-02 05:18:40,811 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:18:40,873 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@24cdc7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:18:41,041 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:19:27,080 INFO com.app.mongodb.MongoDBTest.findPage() - mongodb findAll:3
2015-08-02 05:19:27,082 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1c95553 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@100c858, testMethod = findPage@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@611b5c testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:19:27,096 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 05:18:39 CST 2015]; root of context hierarchy
2015-08-02 05:19:27,100 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:19:42,168 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:19:42,478 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 05:19:42 CST 2015]; root of context hierarchy
2015-08-02 05:19:42,663 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:19:42,710 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:19:42,726 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:19:42,815 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:19:43,475 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t8p0vbayd64v|aee320, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t8p0vbayd64v|aee320, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:19:43,961 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1cfb84c]; rollback [true]
2015-08-02 05:19:43,964 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@60acdc: startup date [Sun Aug 02 05:19:43 CST 2015]; root of context hierarchy
2015-08-02 05:19:43,966 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:19:44,010 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e9581b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:19:44,168 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:20:14,533 INFO com.app.mongodb.MongoDBTest.findPage() - mongodb findAll:2
2015-08-02 05:20:14,539 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@4f891e testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1b33087, testMethod = findPage@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1371c0c testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:20:14,542 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 05:19:42 CST 2015]; root of context hierarchy
2015-08-02 05:20:14,544 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:22:06,205 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:22:06,485 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 05:22:06 CST 2015]; root of context hierarchy
2015-08-02 05:22:06,705 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:22:06,756 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:22:06,778 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:22:06,918 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:22:07,546 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t8s40vv8rieu|1c160cb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t8s40vv8rieu|1c160cb, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:22:07,995 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@87cbde]; rollback [true]
2015-08-02 05:22:08,000 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@b799cf: startup date [Sun Aug 02 05:22:08 CST 2015]; root of context hierarchy
2015-08-02 05:22:08,002 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:22:08,039 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@17cd18d: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:22:08,206 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:22:27,658 INFO com.app.mongodb.MongoDBTest.findPage() - mongodb findAll:3
2015-08-02 05:22:27,668 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@8c0162 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1aedcb3, testMethod = findPage@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@11b8540 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:22:27,714 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 05:22:06 CST 2015]; root of context hierarchy
2015-08-02 05:22:27,715 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:23:01,762 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:23:02,080 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 05:23:02 CST 2015]; root of context hierarchy
2015-08-02 05:23:02,261 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:23:02,319 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:23:02,334 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:23:02,428 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:23:03,098 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t8taw3pn3e29|151fe8a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t8taw3pn3e29|151fe8a, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:23:03,576 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@188d2ae]; rollback [true]
2015-08-02 05:23:03,579 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14e1705: startup date [Sun Aug 02 05:23:03 CST 2015]; root of context hierarchy
2015-08-02 05:23:03,581 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:23:03,621 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1783d33: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:23:03,794 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:23:13,380 INFO com.app.mongodb.MongoDBTest.findPage() - mongodb findAll:3
2015-08-02 05:23:13,389 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@5d33e1 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@f917bd, testMethod = findPage@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1857eeb testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:23:13,404 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 05:23:02 CST 2015]; root of context hierarchy
2015-08-02 05:23:13,405 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:23:20,119 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 05:23:20,462 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 05:23:20 CST 2015]; root of context hierarchy
2015-08-02 05:23:20,668 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 05:23:20,720 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:23:20,734 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 05:23:20,824 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 05:23:21,463 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1t8tp36t8y7v3|1c160cb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1t8tp36t8y7v3|1c160cb, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 05:23:21,927 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1bbec72]; rollback [true]
2015-08-02 05:23:21,930 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@88cf9e: startup date [Sun Aug 02 05:23:21 CST 2015]; root of context hierarchy
2015-08-02 05:23:21,932 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 05:23:21,975 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@10bb83e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 05:23:22,192 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 05:23:46,596 INFO com.app.mongodb.MongoDBTest.findPage() - mongodb findAll:3
2015-08-02 05:23:46,605 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1710c15 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@d044c6, testMethod = findPage@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15330ea testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 05:23:46,613 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 05:23:20 CST 2015]; root of context hierarchy
2015-08-02 05:23:46,616 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:22:03,679 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:22:03,922 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@64ea66: startup date [Sun Aug 02 20:22:03 CST 2015]; root of context hierarchy
2015-08-02 20:22:04,020 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:22:04,044 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e78c96: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:22:04,052 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:22:04,115 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:22:04,403 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u4xgkw14ki9yb|1581e80, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u4xgkw14ki9yb|1581e80, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:22:04,654 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@15af049]; rollback [true]
2015-08-02 20:22:04,656 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@12cb585: startup date [Sun Aug 02 20:22:04 CST 2015]; root of context hierarchy
2015-08-02 20:22:04,657 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:22:04,683 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1dd7736: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:22:04,825 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:22:04,837 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@6ac615 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1f2be27, testMethod = insertSome@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a1f370 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:22:04,874 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@64ea66: startup date [Sun Aug 02 20:22:03 CST 2015]; root of context hierarchy
2015-08-02 20:22:04,874 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e78c96: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:22:17,919 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:22:18,093 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:22:18 CST 2015]; root of context hierarchy
2015-08-02 20:22:18,208 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:22:18,239 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@bf053f: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:22:18,247 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:22:18,307 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:22:18,595 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u4xrj01guxp7x|1581e80, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u4xrj01guxp7x|1581e80, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:22:18,835 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@15af049]; rollback [true]
2015-08-02 20:22:18,835 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@12cb585: startup date [Sun Aug 02 20:22:18 CST 2015]; root of context hierarchy
2015-08-02 20:22:18,835 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:22:18,879 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1dd7736: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:22:18,952 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:22:18,985 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:10
2015-08-02 20:22:18,985 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@704cf5 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@cc7f9e, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ce5e7a testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:22:18,993 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:22:18 CST 2015]; root of context hierarchy
2015-08-02 20:22:18,994 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@bf053f: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:23:06,022 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:23:06,184 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:23:06 CST 2015]; root of context hierarchy
2015-08-02 20:23:06,282 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:23:06,313 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e67e6a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:23:06,328 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:23:06,397 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:23:06,688 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u4ysmm98va4t|8f9a32, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u4ysmm98va4t|8f9a32, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:23:06,981 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@5b28c9]; rollback [true]
2015-08-02 20:23:06,983 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c220eb: startup date [Sun Aug 02 20:23:06 CST 2015]; root of context hierarchy
2015-08-02 20:23:06,984 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:23:07,000 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3299f6: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:23:07,089 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:23:07,096 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-02 20:23:07,098 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1a1f370 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1757337, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1df3d59 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:23:07,103 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:23:06 CST 2015]; root of context hierarchy
2015-08-02 20:23:07,103 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e67e6a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:27:23,259 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:27:23,423 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Sun Aug 02 20:27:23 CST 2015]; root of context hierarchy
2015-08-02 20:27:23,543 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:27:23,574 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:27:23,585 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:27:23,640 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:27:23,940 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u54b4soqdk7o|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u54b4soqdk7o|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:27:24,227 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@63f09e]; rollback [true]
2015-08-02 20:27:24,231 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5b28c9: startup date [Sun Aug 02 20:27:24 CST 2015]; root of context hierarchy
2015-08-02 20:27:24,234 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:27:24,265 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ec8784: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:27:24,349 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:27:24,370 INFO com.app.mongodb.MongoDBTest.removeAll() - mongodb removeAll:
2015-08-02 20:27:24,371 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@87ad67 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@18952cc, testMethod = removeAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@9af0b1 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:27:24,376 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Sun Aug 02 20:27:23 CST 2015]; root of context hierarchy
2015-08-02 20:27:24,376 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:27:36,199 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:27:36,366 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:27:36 CST 2015]; root of context hierarchy
2015-08-02 20:27:36,484 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:27:36,506 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:27:36,506 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:27:36,582 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:27:36,897 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u54l3y5xl0oa|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u54l3y5xl0oa|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:27:37,124 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@15af049]; rollback [true]
2015-08-02 20:27:37,139 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@12cb585: startup date [Sun Aug 02 20:27:37 CST 2015]; root of context hierarchy
2015-08-02 20:27:37,144 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:27:37,174 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1dd7736: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:27:37,260 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:27:37,271 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@6ac615 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1f2be27, testMethod = insertSome@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a1f370 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:27:37,273 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:27:36 CST 2015]; root of context hierarchy
2015-08-02 20:27:37,274 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:27:46,039 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:27:46,205 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 20:27:46 CST 2015]; root of context hierarchy
2015-08-02 20:27:46,353 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:27:46,372 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:27:46,400 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:27:46,487 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:27:46,925 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u54sqo1pf3mf5|151fe8a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u54sqo1pf3mf5|151fe8a, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:27:47,238 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1afc23]; rollback [true]
2015-08-02 20:27:47,238 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@e33fa: startup date [Sun Aug 02 20:27:47 CST 2015]; root of context hierarchy
2015-08-02 20:27:47,238 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:27:47,274 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@df06aa: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:27:47,399 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:28:07,619 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:10
2015-08-02 20:28:07,621 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@b4b9ea testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@119b40f, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7c80d8 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:28:07,627 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 20:27:46 CST 2015]; root of context hierarchy
2015-08-02 20:28:07,628 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:28:17,371 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:28:17,575 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 20:28:17 CST 2015]; root of context hierarchy
2015-08-02 20:28:17,742 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:28:17,795 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:28:17,804 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:28:17,874 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:28:18,285 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u55gyz1bahr2h|1d12614, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u55gyz1bahr2h|1d12614, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:28:18,611 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1334b1a]; rollback [true]
2015-08-02 20:28:18,615 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@19ffd6f: startup date [Sun Aug 02 20:28:18 CST 2015]; root of context hierarchy
2015-08-02 20:28:18,616 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:28:18,647 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@8f337b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:28:18,774 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:28:41,835 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:28:41,837 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@144ffa4 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@eb9dfa, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@d0a12d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:28:41,842 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 20:28:17 CST 2015]; root of context hierarchy
2015-08-02 20:28:41,843 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:28:47,522 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:28:47,722 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1ce85c4: startup date [Sun Aug 02 20:28:47 CST 2015]; root of context hierarchy
2015-08-02 20:28:47,870 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:28:47,902 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1bd9de3: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:28:47,917 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:28:47,992 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:28:48,433 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u56475uzfnyc|17535b6, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u56475uzfnyc|17535b6, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:28:48,756 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@9f26c7]; rollback [true]
2015-08-02 20:28:48,759 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@a866a9: startup date [Sun Aug 02 20:28:48 CST 2015]; root of context hierarchy
2015-08-02 20:28:48,761 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:28:48,796 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14512e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:28:48,955 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:29:03,878 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:29:03,881 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@611b5c testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@14b3950, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19fc33d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:29:03,887 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1ce85c4: startup date [Sun Aug 02 20:28:47 CST 2015]; root of context hierarchy
2015-08-02 20:29:03,887 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1bd9de3: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:29:29,018 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:29:29,232 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Sun Aug 02 20:29:29 CST 2015]; root of context hierarchy
2015-08-02 20:29:29,360 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:29:29,394 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:29:29,405 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:29:29,470 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:29:29,875 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5707ozz5mxj|1c160cb, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5707ozz5mxj|1c160cb, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:29:30,221 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1a4f43e]; rollback [true]
2015-08-02 20:29:30,226 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14afef4: startup date [Sun Aug 02 20:29:30 CST 2015]; root of context hierarchy
2015-08-02 20:29:30,227 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:29:30,261 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1330af4: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:29:30,386 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:31:15,974 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:31:15,983 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@19fc33d testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1cadba6, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@11aa79a testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:31:15,990 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Sun Aug 02 20:29:29 CST 2015]; root of context hierarchy
2015-08-02 20:31:15,992 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:31:57,445 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:31:57,612 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:31:57 CST 2015]; root of context hierarchy
2015-08-02 20:31:57,708 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:31:57,734 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:31:57,744 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:31:57,820 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:31:58,118 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5a6oe17ghkne|4ed904, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5a6oe17ghkne|4ed904, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:31:58,397 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14a55e5]; rollback [true]
2015-08-02 20:31:58,399 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d2d58b: startup date [Sun Aug 02 20:31:58 CST 2015]; root of context hierarchy
2015-08-02 20:31:58,401 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:31:58,432 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b52a28: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:31:58,518 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:31:58,532 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[DiamondUserVO [id=1, accountNo=kkkk, password=null, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=0, accountNo=kkkk0, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=2, accountNo=kkkk2, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=3, accountNo=kkkk3, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=4, accountNo=kkkk4, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=5, accountNo=kkkk5, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=6, accountNo=kkkk6, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=7, accountNo=kkkk7, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=8, accountNo=kkkk8, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=9, accountNo=kkkk9, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null]]
2015-08-02 20:31:58,534 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@704cf5 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@cc7f9e, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ce5e7a testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:31:58,536 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:31:57 CST 2015]; root of context hierarchy
2015-08-02 20:31:58,536 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:32:46,912 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:32:47,125 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:32:47 CST 2015]; root of context hierarchy
2015-08-02 20:32:47,233 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:32:47,261 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:32:47,271 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:32:47,332 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:32:47,614 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5b8vx1nchpoz|18a6e6e, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5b8vx1nchpoz|18a6e6e, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:32:47,894 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@15af049]; rollback [true]
2015-08-02 20:32:47,897 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@12cb585: startup date [Sun Aug 02 20:32:47 CST 2015]; root of context hierarchy
2015-08-02 20:32:47,899 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:32:47,931 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1dd7736: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:32:48,019 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:32:48,020 INFO com.app.mongodb.MongoDBTest.removeAll() - mongodb removeAll:
2015-08-02 20:32:48,022 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@6147d9 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@b41166, testMethod = removeAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1e2481b testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:32:48,026 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:32:47 CST 2015]; root of context hierarchy
2015-08-02 20:32:48,027 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:32:55,443 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:32:55,610 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Sun Aug 02 20:32:55 CST 2015]; root of context hierarchy
2015-08-02 20:32:55,705 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:32:55,732 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:32:55,747 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:32:55,824 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:32:56,135 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5bffnclorls|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5bffnclorls|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:32:56,399 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14d581b]; rollback [true]
2015-08-02 20:32:56,402 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c19919: startup date [Sun Aug 02 20:32:56 CST 2015]; root of context hierarchy
2015-08-02 20:32:56,403 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:32:56,436 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e2c841: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:32:56,529 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:32:56,533 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[]
2015-08-02 20:32:56,537 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@14ce5eb testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@18abc7b, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15c6c8d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:32:56,539 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Sun Aug 02 20:32:55 CST 2015]; root of context hierarchy
2015-08-02 20:32:56,540 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:08,073 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:33:08,243 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:33:08 CST 2015]; root of context hierarchy
2015-08-02 20:33:08,361 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:33:08,376 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:08,398 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:33:08,468 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:33:08,771 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5bp6x18ci9gs|3fbbfc, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5bp6x18ci9gs|3fbbfc, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:33:09,026 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d2d58b]; rollback [true]
2015-08-02 20:33:09,042 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1ff5c98: startup date [Sun Aug 02 20:33:09 CST 2015]; root of context hierarchy
2015-08-02 20:33:09,042 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:33:09,075 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@19fc25: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:09,142 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:33:09,142 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1e2481b testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@ebf3f0, testMethod = insertSome@MongoDBTest, testException = java.lang.IllegalArgumentException: null source, mergedContextConfiguration = [MergedContextConfiguration@dc4c81 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:33:09,176 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:33:08 CST 2015]; root of context hierarchy
2015-08-02 20:33:09,177 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:15,675 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:33:15,874 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Sun Aug 02 20:33:15 CST 2015]; root of context hierarchy
2015-08-02 20:33:16,035 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:33:16,069 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:16,098 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:33:16,183 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:33:16,520 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5bv531ve007e|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5bv531ve007e|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:33:16,786 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14d581b]; rollback [true]
2015-08-02 20:33:16,788 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c19919: startup date [Sun Aug 02 20:33:16 CST 2015]; root of context hierarchy
2015-08-02 20:33:16,789 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:33:16,820 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e2c841: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:16,901 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:33:16,907 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[]
2015-08-02 20:33:16,910 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@14ce5eb testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@18abc7b, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15c6c8d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:33:16,912 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Sun Aug 02 20:33:15 CST 2015]; root of context hierarchy
2015-08-02 20:33:16,913 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:25,841 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:33:26,056 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Sun Aug 02 20:33:26 CST 2015]; root of context hierarchy
2015-08-02 20:33:26,186 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:33:26,217 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:26,225 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:33:26,295 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:33:26,576 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5c2y9n7fex1|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5c2y9n7fex1|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:33:26,819 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@15af049]; rollback [true]
2015-08-02 20:33:26,822 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@12cb585: startup date [Sun Aug 02 20:33:26 CST 2015]; root of context hierarchy
2015-08-02 20:33:26,822 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:33:26,842 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1dd7736: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:26,936 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:33:26,938 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@300429 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@6147d9, testMethod = insertSome@MongoDBTest, testException = java.lang.IllegalArgumentException: null source, mergedContextConfiguration = [MergedContextConfiguration@b41166 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:33:26,945 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Sun Aug 02 20:33:26 CST 2015]; root of context hierarchy
2015-08-02 20:33:26,946 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:33,592 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:33:33,792 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 20:33:33 CST 2015]; root of context hierarchy
2015-08-02 20:33:33,934 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:33:33,993 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:34,004 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:33:34,068 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:33:34,510 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5c8xk1syjkx7|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5c8xk1syjkx7|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:33:34,841 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@b1e399]; rollback [true]
2015-08-02 20:33:34,843 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1590363: startup date [Sun Aug 02 20:33:34 CST 2015]; root of context hierarchy
2015-08-02 20:33:34,845 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:33:34,875 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@197d744: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:33:35,008 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:33:38,266 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[]
2015-08-02 20:33:38,269 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@8759c9 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@17d0bc, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@188edde testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:33:38,274 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 20:33:33 CST 2015]; root of context hierarchy
2015-08-02 20:33:38,274 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:34:17,253 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:34:17,444 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:34:17 CST 2015]; root of context hierarchy
2015-08-02 20:34:17,545 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:34:17,572 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:34:17,587 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:34:17,668 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:34:17,955 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5d6ky8mifhh|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5d6ky8mifhh|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:34:18,295 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d36ff3]; rollback [true]
2015-08-02 20:34:18,299 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@12a416a: startup date [Sun Aug 02 20:34:18 CST 2015]; root of context hierarchy
2015-08-02 20:34:18,301 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:34:18,336 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1c958af: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:34:18,457 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:34:18,475 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@15c6c8d testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@dab859, testMethod = insertSome@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@17cff66 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:34:18,480 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:34:17 CST 2015]; root of context hierarchy
2015-08-02 20:34:18,481 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:34:34,497 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:34:34,707 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:34:34 CST 2015]; root of context hierarchy
2015-08-02 20:34:34,832 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:34:34,868 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:34:34,880 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:34:34,939 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:34:35,389 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5djx0mwneam|aee320, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5djx0mwneam|aee320, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:34:35,723 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@aaf2ef]; rollback [true]
2015-08-02 20:34:35,727 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1ebf305: startup date [Sun Aug 02 20:34:35 CST 2015]; root of context hierarchy
2015-08-02 20:34:35,729 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:34:35,766 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1ddbcb1: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:34:35,908 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:34:39,143 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[DiamondUserVO [id=0, accountNo=kkkk0, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=1, accountNo=kkkk1, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=2, accountNo=kkkk2, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=3, accountNo=kkkk3, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=4, accountNo=kkkk4, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=5, accountNo=kkkk5, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=6, accountNo=kkkk6, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=7, accountNo=kkkk7, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=8, accountNo=kkkk8, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=9, accountNo=kkkk9, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null]]
2015-08-02 20:34:39,145 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@112731f testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@441371, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15887db testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:34:39,150 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:34:34 CST 2015]; root of context hierarchy
2015-08-02 20:34:39,151 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:34:51,688 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:34:51,901 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 20:34:51 CST 2015]; root of context hierarchy
2015-08-02 20:34:52,039 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:34:52,077 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:34:52,092 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:34:52,157 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:34:52,555 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5dx75kb7hst|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5dx75kb7hst|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:34:52,891 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1596138]; rollback [true]
2015-08-02 20:34:52,895 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d317ab: startup date [Sun Aug 02 20:34:52 CST 2015]; root of context hierarchy
2015-08-02 20:34:52,896 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:34:52,933 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a183d2: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:34:53,101 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:35:03,772 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:35:03,776 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@11aa79a testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@f18070, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@12768bb testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:35:03,776 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 20:34:51 CST 2015]; root of context hierarchy
2015-08-02 20:35:03,776 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1757337: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:35:29,229 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:35:29,430 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Sun Aug 02 20:35:29 CST 2015]; root of context hierarchy
2015-08-02 20:35:29,560 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:35:29,604 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:35:29,604 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:35:29,687 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:35:30,108 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5eq5tb0iwv7|b9b67b, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5eq5tb0iwv7|b9b67b, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:35:30,478 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1a5ff38]; rollback [true]
2015-08-02 20:35:30,480 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ea8847: startup date [Sun Aug 02 20:35:30 CST 2015]; root of context hierarchy
2015-08-02 20:35:30,482 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:35:30,503 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@29626a: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:35:30,635 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:35:41,093 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:35:41,101 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@14b3950 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@19fc33d, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cadba6 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:35:41,105 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Sun Aug 02 20:35:29 CST 2015]; root of context hierarchy
2015-08-02 20:35:41,108 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:35:55,528 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:35:55,729 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Sun Aug 02 20:35:55 CST 2015]; root of context hierarchy
2015-08-02 20:35:55,853 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:35:55,904 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:35:55,916 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:35:55,988 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:35:56,411 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5fag0m5pfwz|935741, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5fag0m5pfwz|935741, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:35:56,755 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@116f2e6]; rollback [true]
2015-08-02 20:35:56,759 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1990d96: startup date [Sun Aug 02 20:35:56 CST 2015]; root of context hierarchy
2015-08-02 20:35:56,760 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:35:56,790 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@fc4957: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:35:56,903 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:36:02,952 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:36:02,955 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1710c15 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@d044c6, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15330ea testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:36:02,961 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Sun Aug 02 20:35:55 CST 2015]; root of context hierarchy
2015-08-02 20:36:02,962 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:36:35,660 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:36:35,881 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:36:35 CST 2015]; root of context hierarchy
2015-08-02 20:36:36,044 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:36:36,087 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:36:36,098 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:36:36,160 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:36:36,584 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5g5g51xyla5l|151fe8a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5g5g51xyla5l|151fe8a, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:36:36,929 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1cfb84c]; rollback [true]
2015-08-02 20:36:36,932 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@60acdc: startup date [Sun Aug 02 20:36:36 CST 2015]; root of context hierarchy
2015-08-02 20:36:36,934 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:36:36,951 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e9581b: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:36:37,097 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:36:41,753 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:36:41,756 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@582a85 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@4f891e, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1b33087 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:36:41,760 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:36:35 CST 2015]; root of context hierarchy
2015-08-02 20:36:41,763 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:30,032 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:37:30,239 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@19ba640: startup date [Sun Aug 02 20:37:30 CST 2015]; root of context hierarchy
2015-08-02 20:37:30,370 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:37:30,408 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b41166: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:30,424 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:37:30,464 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:37:30,970 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5hbd9n9ke8o|14c352e, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5hbd9n9ke8o|14c352e, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:37:31,322 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14c0cb0]; rollback [true]
2015-08-02 20:37:31,325 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@13cbbbf: startup date [Sun Aug 02 20:37:31 CST 2015]; root of context hierarchy
2015-08-02 20:37:31,327 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:37:31,359 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@31028a: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:31,481 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:37:34,916 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-02 20:37:34,919 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@3a71ed testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@10daff6, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19b4e60 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:37:34,927 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (2): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14c0cb0]; rollback [true]
2015-08-02 20:37:34,928 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c0b204: startup date [Sun Aug 02 20:37:34 CST 2015]; root of context hierarchy
2015-08-02 20:37:34,933 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:37:34,969 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@13cc996: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:35,006 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:37:35,987 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[DiamondUserVO [id=0, accountNo=kkkk0, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=1, accountNo=kkkk1, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=2, accountNo=kkkk2, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=3, accountNo=kkkk3, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=4, accountNo=kkkk4, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=5, accountNo=kkkk5, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=6, accountNo=kkkk6, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=7, accountNo=kkkk7, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=8, accountNo=kkkk8, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=9, accountNo=kkkk9, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null]]
2015-08-02 20:37:35,989 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@3a71ed testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@18afaa4, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19b4e60 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:37:35,994 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (3): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14c0cb0]; rollback [true]
2015-08-02 20:37:35,994 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@f7821d: startup date [Sun Aug 02 20:37:35 CST 2015]; root of context hierarchy
2015-08-02 20:37:35,998 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:37:36,025 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1dd6a67: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:36,034 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:37:36,565 INFO com.app.mongodb.MongoDBTest.findById() - mongodb findById:
2015-08-02 20:37:36,569 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@3a71ed testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@a5d82a, testMethod = findById@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19b4e60 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:37:36,573 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (4): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14c0cb0]; rollback [true]
2015-08-02 20:37:36,573 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@f47af3: startup date [Sun Aug 02 20:37:36 CST 2015]; root of context hierarchy
2015-08-02 20:37:36,574 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:37:36,598 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@43d653: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:36,598 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:37:36,752 INFO com.app.mongodb.MongoDBTest.findPage() - mongodb findAll:3
2015-08-02 20:37:36,754 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@3a71ed testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@45105c, testMethod = findPage@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19b4e60 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:37:36,757 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (5): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14c0cb0]; rollback [true]
2015-08-02 20:37:36,758 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@42df79: startup date [Sun Aug 02 20:37:36 CST 2015]; root of context hierarchy
2015-08-02 20:37:36,759 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:37:36,794 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@543c44: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:36,804 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:37:36,806 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@3a71ed testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@249e4f, testMethod = init@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19b4e60 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:37:36,808 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (6): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14c0cb0]; rollback [true]
2015-08-02 20:37:36,808 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@848c58: startup date [Sun Aug 02 20:37:36 CST 2015]; root of context hierarchy
2015-08-02 20:37:36,809 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:37:36,831 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1d2625d: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:36,846 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:37:36,899 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:37:36,899 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@3a71ed testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1464fee, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19b4e60 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:37:36,899 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (7): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14c0cb0]; rollback [true]
2015-08-02 20:37:36,899 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1e84ff1: startup date [Sun Aug 02 20:37:36 CST 2015]; root of context hierarchy
2015-08-02 20:37:36,899 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:37:36,939 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@80cf99: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:36,950 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:37:38,898 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@3a71ed testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@8f83a9, testMethod = insertSome@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19b4e60 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:37:38,901 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (8): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14c0cb0]; rollback [true]
2015-08-02 20:37:38,901 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1277ffa: startup date [Sun Aug 02 20:37:38 CST 2015]; root of context hierarchy
2015-08-02 20:37:38,901 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:37:38,927 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1800ce8: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:38,949 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:37:38,950 INFO com.app.mongodb.MongoDBTest.removeAll() - mongodb removeAll:
2015-08-02 20:37:38,951 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@3a71ed testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@ed15c7, testMethod = removeAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@19b4e60 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:37:38,954 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@19ba640: startup date [Sun Aug 02 20:37:30 CST 2015]; root of context hierarchy
2015-08-02 20:37:38,956 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@b41166: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:45,048 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:37:45,278 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:37:45 CST 2015]; root of context hierarchy
2015-08-02 20:37:45,415 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:37:45,457 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:45,465 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:37:45,538 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:37:45,976 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5hmz8102gpo9|aee320, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5hmz8102gpo9|aee320, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:37:46,304 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@9f26c7]; rollback [true]
2015-08-02 20:37:46,308 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@a866a9: startup date [Sun Aug 02 20:37:46 CST 2015]; root of context hierarchy
2015-08-02 20:37:46,309 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:37:46,331 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14512e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:37:46,480 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:40:08,144 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:40:08,151 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1cc55fb testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@210a0e, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@11b1e39 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:40:08,158 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:37:45 CST 2015]; root of context hierarchy
2015-08-02 20:40:08,164 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:20,329 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:40:20,524 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:40:20 CST 2015]; root of context hierarchy
2015-08-02 20:40:20,666 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:40:20,701 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:20,713 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:40:20,777 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:40:21,225 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5kyro3jcghn|151fe8a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5kyro3jcghn|151fe8a, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:40:21,560 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@188d2ae]; rollback [true]
2015-08-02 20:40:21,566 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14e1705: startup date [Sun Aug 02 20:40:21 CST 2015]; root of context hierarchy
2015-08-02 20:40:21,568 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:40:21,591 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1783d33: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:21,727 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:40:23,992 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[]
2015-08-02 20:40:23,998 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@9468ca testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@16bc6e5, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@cf0d1f testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:40:24,006 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:40:20 CST 2015]; root of context hierarchy
2015-08-02 20:40:24,008 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:28,923 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:40:29,131 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1b60280: startup date [Sun Aug 02 20:40:29 CST 2015]; root of context hierarchy
2015-08-02 20:40:29,228 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:40:29,241 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:29,265 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:40:29,318 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:40:29,619 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5l5d6g21vfe|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5l5d6g21vfe|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:40:29,893 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1ff5c98]; rollback [true]
2015-08-02 20:40:29,895 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1cefde4: startup date [Sun Aug 02 20:40:29 CST 2015]; root of context hierarchy
2015-08-02 20:40:29,896 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:40:29,924 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1faa614: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:30,015 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:40:30,018 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@e8f8c5 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1248979, testMethod = insertSome@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1bd9de3 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:40:30,018 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1b60280: startup date [Sun Aug 02 20:40:29 CST 2015]; root of context hierarchy
2015-08-02 20:40:30,018 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:36,227 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:40:36,408 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:40:36 CST 2015]; root of context hierarchy
2015-08-02 20:40:36,533 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:40:36,542 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e67e6a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:36,568 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:40:36,628 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:40:36,908 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5lazz1a1hih2|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5lazz1a1hih2|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:40:37,191 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1e2a069]; rollback [true]
2015-08-02 20:40:37,192 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ab1b4: startup date [Sun Aug 02 20:40:37 CST 2015]; root of context hierarchy
2015-08-02 20:40:37,192 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:40:37,219 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@87d472: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:37,291 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:40:37,307 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[DiamondUserVO [id=0, accountNo=kkkk0, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=1, accountNo=kkkk1, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=2, accountNo=kkkk2, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=3, accountNo=kkkk3, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=4, accountNo=kkkk4, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=5, accountNo=kkkk5, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=6, accountNo=kkkk6, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=7, accountNo=kkkk7, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=8, accountNo=kkkk8, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=9, accountNo=kkkk9, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null]]
2015-08-02 20:40:37,307 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@11402c4 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@c19fbf, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1ded4c9 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:40:37,313 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:40:36 CST 2015]; root of context hierarchy
2015-08-02 20:40:37,315 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e67e6a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:42,908 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:40:43,141 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1f03691: startup date [Sun Aug 02 20:40:43 CST 2015]; root of context hierarchy
2015-08-02 20:40:43,275 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:40:43,314 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f8c5: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:43,326 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:40:43,390 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:40:43,815 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5lg7t3v9mfp|b9b67b, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5lg7t3v9mfp|b9b67b, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:40:44,154 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1593225]; rollback [true]
2015-08-02 20:40:44,157 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d03350: startup date [Sun Aug 02 20:40:44 CST 2015]; root of context hierarchy
2015-08-02 20:40:44,158 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:40:44,193 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@24cdc7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:40:44,324 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:40:49,343 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:40:49,345 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@681e5a testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1a0bb6f, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1719b33 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:40:49,351 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1f03691: startup date [Sun Aug 02 20:40:43 CST 2015]; root of context hierarchy
2015-08-02 20:40:49,353 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f8c5: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:41:23,639 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:41:23,822 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 20:41:23 CST 2015]; root of context hierarchy
2015-08-02 20:41:23,960 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:41:24,011 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:41:24,022 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:41:24,092 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:41:24,527 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5mbly1gp1cum|1af328, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5mbly1gp1cum|1af328, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:41:24,866 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@9f26c7]; rollback [true]
2015-08-02 20:41:24,871 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@a866a9: startup date [Sun Aug 02 20:41:24 CST 2015]; root of context hierarchy
2015-08-02 20:41:24,872 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:41:24,908 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14512e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:41:25,060 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:41:40,005 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:41:40,007 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@d044c6 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@15330ea, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@b0838a testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:41:40,011 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 20:41:23 CST 2015]; root of context hierarchy
2015-08-02 20:41:40,012 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:19,440 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:42:19,627 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:42:19 CST 2015]; root of context hierarchy
2015-08-02 20:42:19,746 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:42:19,779 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:19,787 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:42:19,856 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:42:20,150 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5nimzzv1dsz|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5nimzzv1dsz|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:42:20,390 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d36ff3]; rollback [true]
2015-08-02 20:42:20,394 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@12a416a: startup date [Sun Aug 02 20:42:20 CST 2015]; root of context hierarchy
2015-08-02 20:42:20,395 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:42:20,422 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1c958af: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:20,505 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:42:20,514 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-02 20:42:20,516 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@15c6c8d testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@dab859, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@17cff66 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:42:20,522 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:42:19 CST 2015]; root of context hierarchy
2015-08-02 20:42:20,523 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6ed322: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:33,962 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:42:34,160 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:42:34 CST 2015]; root of context hierarchy
2015-08-02 20:42:34,266 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:42:34,292 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:34,303 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:42:34,368 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:42:34,672 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5ntug481dcf|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5ntug481dcf|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:42:34,978 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d2d58b]; rollback [true]
2015-08-02 20:42:34,981 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1ff5c98: startup date [Sun Aug 02 20:42:34 CST 2015]; root of context hierarchy
2015-08-02 20:42:34,982 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:42:35,018 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@19fc25: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:35,153 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:42:35,177 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-02 20:42:35,181 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1f2be27 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1a1f370, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1757337 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:42:35,184 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:42:34 CST 2015]; root of context hierarchy
2015-08-02 20:42:35,186 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:42,009 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:42:42,203 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 20:42:42 CST 2015]; root of context hierarchy
2015-08-02 20:42:42,327 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:42:42,364 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:42,370 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:42:42,419 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:42:42,853 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5o02nvuy7zn|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5o02nvuy7zn|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:42:43,204 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@b172ef]; rollback [true]
2015-08-02 20:42:43,208 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@115c6cb: startup date [Sun Aug 02 20:42:43 CST 2015]; root of context hierarchy
2015-08-02 20:42:43,209 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:42:43,238 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@eba9b0: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:43,354 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:42:50,711 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:42:50,713 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@441371 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@15887db, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@13f67a9 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:42:50,718 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Sun Aug 02 20:42:42 CST 2015]; root of context hierarchy
2015-08-02 20:42:50,721 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:58,090 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:42:58,269 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1f03691: startup date [Sun Aug 02 20:42:58 CST 2015]; root of context hierarchy
2015-08-02 20:42:58,426 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:42:58,452 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f8c5: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:58,468 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:42:58,537 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:42:58,960 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5ochrh3seqn|b9b67b, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5ochrh3seqn|b9b67b, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:42:59,308 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@8e0604]; rollback [true]
2015-08-02 20:42:59,311 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@611e6c: startup date [Sun Aug 02 20:42:59 CST 2015]; root of context hierarchy
2015-08-02 20:42:59,312 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:42:59,340 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1c69e1f: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:42:59,465 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:43:06,795 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:43:06,798 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@29e94d testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@193d2d4, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1f68937 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:43:06,803 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1f03691: startup date [Sun Aug 02 20:42:58 CST 2015]; root of context hierarchy
2015-08-02 20:43:06,803 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f8c5: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:12,355 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:43:12,560 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Sun Aug 02 20:43:12 CST 2015]; root of context hierarchy
2015-08-02 20:43:12,692 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:43:12,719 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:12,744 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:43:12,802 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:43:13,286 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5oni51mfpgk4|17535b6, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5oni51mfpgk4|17535b6, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:43:13,626 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1d7b7f5]; rollback [true]
2015-08-02 20:43:13,629 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@11c2de3: startup date [Sun Aug 02 20:43:13 CST 2015]; root of context hierarchy
2015-08-02 20:43:13,630 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:43:13,659 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@646d1: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:13,791 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:43:16,665 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:43:16,667 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@7329a0 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@b1e975, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@560bf6 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:43:16,670 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Sun Aug 02 20:43:12 CST 2015]; root of context hierarchy
2015-08-02 20:43:16,670 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1b3278a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:23,921 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:43:24,127 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:43:24 CST 2015]; root of context hierarchy
2015-08-02 20:43:24,235 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:43:24,265 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e67e6a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:24,274 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:43:24,343 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:43:24,628 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5owek2859ep|18a6e6e, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5owek2859ep|18a6e6e, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:43:24,880 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@12a416a]; rollback [true]
2015-08-02 20:43:24,882 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@97e3a5: startup date [Sun Aug 02 20:43:24 CST 2015]; root of context hierarchy
2015-08-02 20:43:24,883 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:43:24,910 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@952905: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:24,997 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:43:25,005 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-02 20:43:25,006 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1757337 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1df3d59, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@134c5ff testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:43:25,009 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:43:24 CST 2015]; root of context hierarchy
2015-08-02 20:43:25,009 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e67e6a: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:30,871 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:43:31,087 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 20:43:31 CST 2015]; root of context hierarchy
2015-08-02 20:43:31,225 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:43:31,264 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:31,267 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:43:31,333 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:43:31,744 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5p1sye13eti|17e53c9, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5p1sye13eti|17e53c9, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:43:32,094 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@9f26c7]; rollback [true]
2015-08-02 20:43:32,097 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@a866a9: startup date [Sun Aug 02 20:43:32 CST 2015]; root of context hierarchy
2015-08-02 20:43:32,098 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:43:32,129 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14512e: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:32,262 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:43:34,696 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:43:34,698 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1a3fb76 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@d21555, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@76a6d9 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:43:34,704 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 20:43:31 CST 2015]; root of context hierarchy
2015-08-02 20:43:34,705 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:43,640 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:43:43,821 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:43:43 CST 2015]; root of context hierarchy
2015-08-02 20:43:43,967 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:43:44,017 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:44,017 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:43:44,094 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:43:44,533 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5pbne13cylkm|1e45e3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5pbne13cylkm|1e45e3, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:43:44,867 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1593225]; rollback [true]
2015-08-02 20:43:44,870 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d03350: startup date [Sun Aug 02 20:43:44 CST 2015]; root of context hierarchy
2015-08-02 20:43:44,871 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:43:44,885 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@24cdc7: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:43:45,027 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:44:03,311 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[DiamondUserVO [id=0, accountNo=kkkk0, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=1, accountNo=kkkk1, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=2, accountNo=kkkk2, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=3, accountNo=kkkk3, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=4, accountNo=kkkk4, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=5, accountNo=kkkk5, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=6, accountNo=kkkk6, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=7, accountNo=kkkk7, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=8, accountNo=kkkk8, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=9, accountNo=kkkk9, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=13, accountNo=kkkk3, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null]]
2015-08-02 20:44:03,313 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@5d33e1 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@f917bd, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1857eeb testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:44:03,317 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:43:43 CST 2015]; root of context hierarchy
2015-08-02 20:44:03,317 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:20,867 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:44:21,037 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:44:21 CST 2015]; root of context hierarchy
2015-08-02 20:44:21,134 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:44:21,148 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:21,168 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:44:21,232 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:44:21,515 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5q4aw15fwzjb|3fbbfc, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5q4aw15fwzjb|3fbbfc, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:44:21,789 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d2d58b]; rollback [true]
2015-08-02 20:44:21,792 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1ff5c98: startup date [Sun Aug 02 20:44:21 CST 2015]; root of context hierarchy
2015-08-02 20:44:21,793 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:44:21,809 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@19fc25: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:21,918 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:44:21,920 INFO com.app.mongodb.MongoDBTest.removeAll() - mongodb removeAll:
2015-08-02 20:44:21,924 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1e2481b testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@ebf3f0, testMethod = removeAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dc4c81 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:44:21,927 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:44:21 CST 2015]; root of context hierarchy
2015-08-02 20:44:21,927 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:29,215 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:44:29,386 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Sun Aug 02 20:44:29 CST 2015]; root of context hierarchy
2015-08-02 20:44:29,485 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:44:29,499 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:29,520 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:44:29,598 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:44:29,891 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5qarax37s4r|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5qarax37s4r|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:44:30,139 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@14d581b]; rollback [true]
2015-08-02 20:44:30,142 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c19919: startup date [Sun Aug 02 20:44:30 CST 2015]; root of context hierarchy
2015-08-02 20:44:30,143 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:44:30,174 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e2c841: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:30,263 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:44:30,273 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@15c6c8d testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@dab859, testMethod = insertSome@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@17cff66 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:44:30,276 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Sun Aug 02 20:44:29 CST 2015]; root of context hierarchy
2015-08-02 20:44:30,277 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:35,790 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:44:35,941 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:44:35 CST 2015]; root of context hierarchy
2015-08-02 20:44:36,070 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:44:36,094 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:36,098 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:44:36,167 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:44:36,467 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5qftt17nq8ue|e265d0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5qftt17nq8ue|e265d0, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:44:36,737 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@5b28c9]; rollback [true]
2015-08-02 20:44:36,740 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c220eb: startup date [Sun Aug 02 20:44:36 CST 2015]; root of context hierarchy
2015-08-02 20:44:36,741 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:44:36,769 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3299f6: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:36,842 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:44:36,849 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-02 20:44:36,852 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@6ac615 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1f2be27, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a1f370 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:44:36,855 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Sun Aug 02 20:44:35 CST 2015]; root of context hierarchy
2015-08-02 20:44:36,856 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:43,555 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:44:43,741 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 20:44:43 CST 2015]; root of context hierarchy
2015-08-02 20:44:43,864 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:44:43,908 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:43,920 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:44:43,989 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:44:44,437 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5qluj19yr30d|151fe8a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5qluj19yr30d|151fe8a, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:44:44,770 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@194fa8d]; rollback [true]
2015-08-02 20:44:44,772 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@194d762: startup date [Sun Aug 02 20:44:44 CST 2015]; root of context hierarchy
2015-08-02 20:44:44,774 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:44:44,798 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1868474: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:44:44,929 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:45:00,364 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[DiamondUserVO [id=0, accountNo=kkkk0, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=1, accountNo=kkkk1, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=2, accountNo=kkkk2, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=3, accountNo=kkkk3, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=4, accountNo=kkkk4, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=5, accountNo=kkkk5, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=6, accountNo=kkkk6, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=7, accountNo=kkkk7, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=8, accountNo=kkkk8, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=9, accountNo=kkkk9, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=13, accountNo=kkkk3, password=112, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null]]
2015-08-02 20:45:00,369 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1ac27b6 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1633f69, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@d80d5c testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:45:00,369 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1a1399: startup date [Sun Aug 02 20:44:43 CST 2015]; root of context hierarchy
2015-08-02 20:45:00,369 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1a1f370: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:45:04,791 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-02 20:45:04,997 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:45:04 CST 2015]; root of context hierarchy
2015-08-02 20:45:05,135 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-02 20:45:05,178 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:45:05,190 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-02 20:45:05,262 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-02 20:45:05,664 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1u5r29xrhbvca|1e45e3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1u5r29xrhbvca|1e45e3, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-02 20:45:05,997 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@188d2ae]; rollback [true]
2015-08-02 20:45:05,997 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14e1705: startup date [Sun Aug 02 20:45:05 CST 2015]; root of context hierarchy
2015-08-02 20:45:05,997 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-02 20:45:06,028 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1783d33: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-02 20:45:06,170 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-02 20:45:11,471 INFO com.app.mongodb.MongoDBTest.findByAccountnoAndPassword() - mongodb findById:
2015-08-02 20:45:11,473 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1844479 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@ab8796, testMethod = findByAccountnoAndPassword@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@152c19d testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-02 20:45:11,477 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@caf6c1: startup date [Sun Aug 02 20:45:04 CST 2015]; root of context hierarchy
2015-08-02 20:45:11,478 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
