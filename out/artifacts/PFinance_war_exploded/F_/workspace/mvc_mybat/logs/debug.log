2017-03-07 19:34:02,052 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2017-03-07 19:34:04,324 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@5bc3efa4: startup date [Tue Mar 07 19:34:04 CST 2017]; root of context hierarchy
2017-03-07 19:34:04,413 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2017-03-07 19:34:04,447 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6402790e: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,pageQueryService,currencyController,indexController,redisCacheService,commonService,demoController,evaluateController,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,accountListDAO,adminDAO,baseDao,currencyDAO,currencyPurchaseDAO,customerAccountDAO,customerCommentDAO,customerDAO,fundDAO,fundPurchaseDAO,newsDAO,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2017-03-07 19:34:04,458 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2017-03-07 19:34:04,806 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2017-03-07 19:34:05,368 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge1w19m1arkpui6ox7dp|4c718764, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge1w19m1arkpui6ox7dp|4c718764, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/fp, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2017-03-07 19:34:05,620 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@3bf21475]; rollback [false]
2017-03-07 19:34:05,681 DEBUG java.sql.Connection.debug() - ooo Using Connection [com.mchange.v2.c3p0.impl.NewProxyConnection@360acf3f]
2017-03-07 19:34:05,686 DEBUG java.sql.Connection.debug() - ==>  Preparing: select ID id , USERNAME userName , PASSWORD password , ADDTIME addTime , UPDATETIME updateTime FROM ADMIN T WHERE 1=1 AND T.ID = ? 
2017-03-07 19:34:05,715 DEBUG java.sql.PreparedStatement.debug() - ==> Parameters: 1(Long)
2017-03-07 19:34:05,738 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Committed transaction after test execution for test context [[TestContext@1940d1f6 testClass = AdminTest, testInstance = com.fp.AdminTest@5c8dc2d4, testMethod = find@AdminTest, testException = java.lang.NullPointerException, mergedContextConfiguration = [MergedContextConfiguration@5ef21bc4 testClass = AdminTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2017-03-07 19:34:05,744 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@5bc3efa4: startup date [Tue Mar 07 19:34:04 CST 2017]; root of context hierarchy
2017-03-07 19:34:05,744 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6402790e: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,pageQueryService,currencyController,indexController,redisCacheService,commonService,demoController,evaluateController,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,accountListDAO,adminDAO,baseDao,currencyDAO,currencyPurchaseDAO,customerAccountDAO,customerCommentDAO,customerDAO,fundDAO,fundPurchaseDAO,newsDAO,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
