2015-08-04 23:20:40,809 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-04 23:20:40,969 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Tue Aug 04 23:20:40 CST 2015]; root of context hierarchy
2015-08-04 23:20:41,094 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-04 23:20:41,125 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@969c29: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:20:41,141 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-04 23:20:41,235 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-04 23:20:41,500 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1x66var17vsc8s|15fb38, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1x66var17vsc8s|15fb38, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-04 23:20:42,031 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@d36ff3]; rollback [true]
2015-08-04 23:20:42,043 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@12a416a: startup date [Tue Aug 04 23:20:42 CST 2015]; root of context hierarchy
2015-08-04 23:20:42,043 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-04 23:20:42,059 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1c958af: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:20:42,153 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-04 23:20:42,168 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-04 23:20:42,168 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@15c6c8d testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@dab859, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@17cff66 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-04 23:20:42,168 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Tue Aug 04 23:20:40 CST 2015]; root of context hierarchy
2015-08-04 23:20:42,168 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@969c29: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:23:06,638 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-04 23:23:06,841 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Tue Aug 04 23:23:06 CST 2015]; root of context hierarchy
2015-08-04 23:23:06,951 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-04 23:23:06,997 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1df3d59: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:23:07,013 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-04 23:23:07,060 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-04 23:23:07,435 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1x69zth1nznb1a|151fe8a, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1x69zth1nznb1a|151fe8a, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-04 23:23:07,761 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@62bd13]; rollback [true]
2015-08-04 23:23:07,761 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@e3c030: startup date [Tue Aug 04 23:23:07 CST 2015]; root of context hierarchy
2015-08-04 23:23:07,761 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-04 23:23:07,792 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ac60ba: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:23:07,886 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-04 23:23:34,520 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-04 23:23:34,692 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Tue Aug 04 23:23:34 CST 2015]; root of context hierarchy
2015-08-04 23:23:34,786 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-04 23:23:34,817 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:23:34,817 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-04 23:23:34,879 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-04 23:23:35,129 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1x6ala8getbj1|5e222e, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1x6ala8getbj1|5e222e, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-04 23:23:35,379 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1555185]; rollback [true]
2015-08-04 23:23:35,388 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@413fc6: startup date [Tue Aug 04 23:23:35 CST 2015]; root of context hierarchy
2015-08-04 23:23:35,388 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-04 23:23:35,404 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@bd93cd: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:23:35,482 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-04 23:23:35,482 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-04 23:23:35,482 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@17cff66 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@163a320, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6ac615 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-04 23:23:35,498 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@79a2e7: startup date [Tue Aug 04 23:23:34 CST 2015]; root of context hierarchy
2015-08-04 23:23:35,498 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:23:42,307 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-04 23:23:42,479 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Tue Aug 04 23:23:42 CST 2015]; root of context hierarchy
2015-08-04 23:23:42,619 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-04 23:23:42,651 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:23:42,666 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-04 23:23:42,729 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-04 23:23:43,135 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1x6arbu1vp90m9|1e45e3, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1x6arbu1vp90m9|1e45e3, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-04 23:23:43,439 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1b277f0]; rollback [true]
2015-08-04 23:23:43,439 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d95bc3: startup date [Tue Aug 04 23:23:43 CST 2015]; root of context hierarchy
2015-08-04 23:23:43,454 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-04 23:23:43,470 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e8b957: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:23:43,611 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-04 23:24:10,605 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[DiamondUserVO [id=0, accountNo=kkkk0, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=1, accountNo=kkkk1, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=2, accountNo=kkkk2, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=3, accountNo=kkkk3, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=4, accountNo=kkkk4, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=5, accountNo=kkkk5, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=6, accountNo=kkkk6, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=7, accountNo=kkkk7, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=8, accountNo=kkkk8, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=9, accountNo=kkkk9, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=13, accountNo=kkkk3, password=112, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null]]
2015-08-04 23:24:10,608 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@11cac41 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@d044c6, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@15330ea testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-04 23:24:10,608 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@1fcc0a2: startup date [Tue Aug 04 23:23:42 CST 2015]; root of context hierarchy
2015-08-04 23:24:10,608 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@134c5ff: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:24:35,624 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-04 23:24:35,780 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Tue Aug 04 23:24:35 CST 2015]; root of context hierarchy
2015-08-04 23:24:35,874 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-04 23:24:35,905 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:24:35,905 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-04 23:24:35,968 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-04 23:24:36,218 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1x6bwf5cgc9w2|15fb38, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1x6bwf5cgc9w2|15fb38, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-04 23:24:36,484 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1c220eb]; rollback [true]
2015-08-04 23:24:36,486 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@13c2d7f: startup date [Tue Aug 04 23:24:36 CST 2015]; root of context hierarchy
2015-08-04 23:24:36,486 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-04 23:24:36,517 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1533c8: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:24:36,580 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-04 23:24:36,595 INFO com.app.mongodb.MongoDBTest.insert() - mongodb insert:
2015-08-04 23:24:36,595 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@134c5ff testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1b3278a, testMethod = insert@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@e8f8c5 testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-04 23:24:36,595 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@158f9d3: startup date [Tue Aug 04 23:24:35 CST 2015]; root of context hierarchy
2015-08-04 23:24:36,595 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1758500: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:24:43,575 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/ApplicationContext.xml]
2015-08-04 23:24:43,763 INFO org.springframework.context.support.GenericApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Tue Aug 04 23:24:43 CST 2015]; root of context hierarchy
2015-08-04 23:24:43,888 INFO org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.loadProperties() - Loading properties file from class path resource [mysql.properties]
2015-08-04 23:24:43,919 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f8c5: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:24:43,935 INFO com.mchange.v2.log.MLog.<clinit>() - MLog clients using log4j logging.
2015-08-04 23:24:43,998 INFO com.mchange.v2.c3p0.C3P0Registry.banner() - Initializing c3p0-0.9.2-pre4 [built 16-June-2012 20:16:37 -0400; debug? true; trace: 10]
2015-08-04 23:24:44,388 INFO com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getPoolManager() - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> true, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 60000, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1hge15x9a1x6c2m61cmhsk6|7b4ed7, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1hge15x9a1x6c2m61cmhsk6|7b4ed7, idleConnectionTestPeriod -> 18000, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://localhost:3306/diamonds, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 30, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 30, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
2015-08-04 23:24:44,715 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction() - Began transaction (1): transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@b172ef]; rollback [true]
2015-08-04 23:24:44,731 INFO org.springframework.context.support.ClassPathXmlApplicationContext.prepareRefresh() - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@115c6cb: startup date [Tue Aug 04 23:24:44 CST 2015]; root of context hierarchy
2015-08-04 23:24:44,731 INFO org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions() - Loading XML bean definitions from class path resource [spring-conf/spring-mongo.xml]
2015-08-04 23:24:44,762 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons() - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@eba9b0: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,mongo,mongoTemplate,mongodao,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2015-08-04 23:24:44,856 INFO com.app.mongodb.MongoDBTest.init() - get mongodb dao :success
2015-08-04 23:25:07,092 INFO com.app.mongodb.MongoDBTest.findAll() - mongodb findAll:[DiamondUserVO [id=0, accountNo=kkkk0, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=1, accountNo=kkkk1, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=2, accountNo=kkkk2, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=3, accountNo=kkkk3, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=4, accountNo=kkkk4, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=5, accountNo=kkkk5, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=6, accountNo=kkkk6, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=7, accountNo=kkkk7, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=8, accountNo=kkkk8, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=9, accountNo=kkkk9, password=111, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null], DiamondUserVO [id=13, accountNo=kkkk3, password=112, name=null, tel=null, email=null, company=null, companyAddress=null, managerId=null, manager=null, ttime=null, content=null]]
2015-08-04 23:25:07,099 INFO org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction() - Rolled back transaction after test execution for test context [[TestContext@1b33087 testClass = MongoDBTest, testInstance = com.app.mongodb.MongoDBTest@1371c0c, testMethod = findAll@MongoDBTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@112731f testClass = MongoDBTest, locations = '{classpath:spring-conf/ApplicationContext.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]]
2015-08-04 23:25:07,099 INFO org.springframework.context.support.GenericApplicationContext.doClose() - Closing org.springframework.context.support.GenericApplicationContext@10e35d5: startup date [Tue Aug 04 23:24:43 CST 2015]; root of context hierarchy
2015-08-04 23:25:07,099 INFO org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons() - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@e8f8c5: defining beans [propertiesConfigBean,dataSource,transactionManager,baseJdbcTemplate,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,diamondUserService,managerService,mongoDBService,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,baseDao,diamondUserDAO,managerDAO,mongoDBBaseDao,hashFunction,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
